// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "GeneratedCppIncludes.h"
#include "MultiUserTool.h"
#include "MultiUserTool.generated.dep.h"
PRAGMA_DISABLE_OPTIMIZATION
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1MultiUserTool() {}
FName MULTIUSERTOOL_Enhance = FName(TEXT("Enhance"));
FName MULTIUSERTOOL_EnhanceMultiCast = FName(TEXT("EnhanceMultiCast"));
FName MULTIUSERTOOL_EnhanceNeuron = FName(TEXT("EnhanceNeuron"));
FName MULTIUSERTOOL_HideEnhacedNeurons = FName(TEXT("HideEnhacedNeurons"));
FName MULTIUSERTOOL_HideNotEnhacedNeurons = FName(TEXT("HideNotEnhacedNeurons"));
FName MULTIUSERTOOL_PlayReplay = FName(TEXT("PlayReplay"));
FName MULTIUSERTOOL_ServerMoveForward = FName(TEXT("ServerMoveForward"));
FName MULTIUSERTOOL_ServerMoveRight = FName(TEXT("ServerMoveRight"));
FName MULTIUSERTOOL_ServerMoveTop = FName(TEXT("ServerMoveTop"));
FName MULTIUSERTOOL_ServerMoveUpDown = FName(TEXT("ServerMoveUpDown"));
FName MULTIUSERTOOL_SetCurrentFloatingName = FName(TEXT("SetCurrentFloatingName"));
FName MULTIUSERTOOL_SetInfoNeuron = FName(TEXT("SetInfoNeuron"));
FName MULTIUSERTOOL_UnHideEnhacedNeurons = FName(TEXT("UnHideEnhacedNeurons"));
FName MULTIUSERTOOL_UnHideNotEnhacedNeurons = FName(TEXT("UnHideNotEnhacedNeurons"));
FName MULTIUSERTOOL_UserChat = FName(TEXT("UserChat"));
FName MULTIUSERTOOL_UserChatP = FName(TEXT("UserChatP"));
FName MULTIUSERTOOL_UserChatRPC = FName(TEXT("UserChatRPC"));
	void UBillboardingMeshComponent::StaticRegisterNativesUBillboardingMeshComponent()
	{
	}
	IMPLEMENT_CLASS(UBillboardingMeshComponent, 3229741480);
	void UMyBillboardingMeshComponent::StaticRegisterNativesUMyBillboardingMeshComponent()
	{
	}
	IMPLEMENT_CLASS(UMyBillboardingMeshComponent, 227077160);
class UScriptStruct* FGeneratedMeshTriangle::StaticStruct()
{
	extern MULTIUSERTOOL_API class UPackage* Z_Construct_UPackage__Script_MultiUserTool();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MULTIUSERTOOL_API class UScriptStruct* Z_Construct_UScriptStruct_FGeneratedMeshTriangle();
		extern MULTIUSERTOOL_API uint32 Get_Z_Construct_UScriptStruct_FGeneratedMeshTriangle_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGeneratedMeshTriangle, Z_Construct_UPackage__Script_MultiUserTool(), TEXT("GeneratedMeshTriangle"), sizeof(FGeneratedMeshTriangle), Get_Z_Construct_UScriptStruct_FGeneratedMeshTriangle_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGeneratedMeshTriangle(FGeneratedMeshTriangle::StaticStruct, TEXT("/Script/MultiUserTool"), TEXT("GeneratedMeshTriangle"), false, nullptr, nullptr);
static struct FScriptStruct_MultiUserTool_StaticRegisterNativesFGeneratedMeshTriangle
{
	FScriptStruct_MultiUserTool_StaticRegisterNativesFGeneratedMeshTriangle()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GeneratedMeshTriangle")),new UScriptStruct::TCppStructOps<FGeneratedMeshTriangle>);
	}
} ScriptStruct_MultiUserTool_StaticRegisterNativesFGeneratedMeshTriangle;
	void ACodeGeneratedNeuron::StaticRegisterNativesACodeGeneratedNeuron()
	{
	}
	IMPLEMENT_CLASS(ACodeGeneratedNeuron, 2104611104);
	void AImpostorNeuronForest::StaticRegisterNativesAImpostorNeuronForest()
	{
	}
	IMPLEMENT_CLASS(AImpostorNeuronForest, 2704204597);
	void ANeuron::Enhance()
	{
		ProcessEvent(FindFunctionChecked(MULTIUSERTOOL_Enhance),NULL);
	}
	void ANeuron::EnhanceMultiCast(bool enhace)
	{
		Neuron_eventEnhanceMultiCast_Parms Parms;
		Parms.enhace=enhace ? true : false;
		ProcessEvent(FindFunctionChecked(MULTIUSERTOOL_EnhanceMultiCast),&Parms);
	}
	void ANeuron::StaticRegisterNativesANeuron()
	{
		FNativeFunctionRegistrar::RegisterFunction(ANeuron::StaticClass(), "CustomOnBeginMouseOver",(Native)&ANeuron::execCustomOnBeginMouseOver);
		FNativeFunctionRegistrar::RegisterFunction(ANeuron::StaticClass(), "Enhance",(Native)&ANeuron::execEnhance);
		FNativeFunctionRegistrar::RegisterFunction(ANeuron::StaticClass(), "EnhanceMultiCast",(Native)&ANeuron::execEnhanceMultiCast);
	}
	IMPLEMENT_CLASS(ANeuron, 3922612577);
	void ANavigator::ServerMoveForward(float Value, FRotator Rotation)
	{
		Navigator_eventServerMoveForward_Parms Parms;
		Parms.Value=Value;
		Parms.Rotation=Rotation;
		ProcessEvent(FindFunctionChecked(MULTIUSERTOOL_ServerMoveForward),&Parms);
	}
	void ANavigator::ServerMoveRight(float Value, FRotator Rotation)
	{
		Navigator_eventServerMoveRight_Parms Parms;
		Parms.Value=Value;
		Parms.Rotation=Rotation;
		ProcessEvent(FindFunctionChecked(MULTIUSERTOOL_ServerMoveRight),&Parms);
	}
	void ANavigator::ServerMoveUpDown(float Value, FRotator Rotation)
	{
		Navigator_eventServerMoveUpDown_Parms Parms;
		Parms.Value=Value;
		Parms.Rotation=Rotation;
		ProcessEvent(FindFunctionChecked(MULTIUSERTOOL_ServerMoveUpDown),&Parms);
	}
	void ANavigator::StaticRegisterNativesANavigator()
	{
		FNativeFunctionRegistrar::RegisterFunction(ANavigator::StaticClass(), "OnRep_PosChange",(Native)&ANavigator::execOnRep_PosChange);
		FNativeFunctionRegistrar::RegisterFunction(ANavigator::StaticClass(), "OnRep_RotChange",(Native)&ANavigator::execOnRep_RotChange);
		FNativeFunctionRegistrar::RegisterFunction(ANavigator::StaticClass(), "ServerMoveForward",(Native)&ANavigator::execServerMoveForward);
		FNativeFunctionRegistrar::RegisterFunction(ANavigator::StaticClass(), "ServerMoveRight",(Native)&ANavigator::execServerMoveRight);
		FNativeFunctionRegistrar::RegisterFunction(ANavigator::StaticClass(), "ServerMoveUpDown",(Native)&ANavigator::execServerMoveUpDown);
	}
	IMPLEMENT_CLASS(ANavigator, 4021804586);
	void AMultiUserToolGameMode::StaticRegisterNativesAMultiUserToolGameMode()
	{
	}
	IMPLEMENT_CLASS(AMultiUserToolGameMode, 3707458805);
	void AMyActorNotification::StaticRegisterNativesAMyActorNotification()
	{
		FNativeFunctionRegistrar::RegisterFunction(AMyActorNotification::StaticClass(), "CustomOnBeginMouseOver",(Native)&AMyActorNotification::execCustomOnBeginMouseOver);
	}
	IMPLEMENT_CLASS(AMyActorNotification, 3289970369);
class UScriptStruct* FSChatMsg::StaticStruct()
{
	extern MULTIUSERTOOL_API class UPackage* Z_Construct_UPackage__Script_MultiUserTool();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MULTIUSERTOOL_API class UScriptStruct* Z_Construct_UScriptStruct_FSChatMsg();
		extern MULTIUSERTOOL_API uint32 Get_Z_Construct_UScriptStruct_FSChatMsg_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSChatMsg, Z_Construct_UPackage__Script_MultiUserTool(), TEXT("SChatMsg"), sizeof(FSChatMsg), Get_Z_Construct_UScriptStruct_FSChatMsg_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSChatMsg(FSChatMsg::StaticStruct, TEXT("/Script/MultiUserTool"), TEXT("SChatMsg"), false, nullptr, nullptr);
static struct FScriptStruct_MultiUserTool_StaticRegisterNativesFSChatMsg
{
	FScriptStruct_MultiUserTool_StaticRegisterNativesFSChatMsg()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SChatMsg")),new UScriptStruct::TCppStructOps<FSChatMsg>);
	}
} ScriptStruct_MultiUserTool_StaticRegisterNativesFSChatMsg;
	void UMyAdvancedFriendsGameInstance::StaticRegisterNativesUMyAdvancedFriendsGameInstance()
	{
		FNativeFunctionRegistrar::RegisterFunction(UMyAdvancedFriendsGameInstance::StaticClass(), "GetMD5Sum",(Native)&UMyAdvancedFriendsGameInstance::execGetMD5Sum);
		FNativeFunctionRegistrar::RegisterFunction(UMyAdvancedFriendsGameInstance::StaticClass(), "GuestLogin",(Native)&UMyAdvancedFriendsGameInstance::execGuestLogin);
		FNativeFunctionRegistrar::RegisterFunction(UMyAdvancedFriendsGameInstance::StaticClass(), "Login",(Native)&UMyAdvancedFriendsGameInstance::execLogin);
		FNativeFunctionRegistrar::RegisterFunction(UMyAdvancedFriendsGameInstance::StaticClass(), "NewMessage",(Native)&UMyAdvancedFriendsGameInstance::execNewMessage);
		FNativeFunctionRegistrar::RegisterFunction(UMyAdvancedFriendsGameInstance::StaticClass(), "Register",(Native)&UMyAdvancedFriendsGameInstance::execRegister);
	}
	IMPLEMENT_CLASS(UMyAdvancedFriendsGameInstance, 3310314319);
	void UMyBlueprintFunctionLibrary::StaticRegisterNativesUMyBlueprintFunctionLibrary()
	{
	}
	IMPLEMENT_CLASS(UMyBlueprintFunctionLibrary, 245792250);
	void AMyCharacter::StaticRegisterNativesAMyCharacter()
	{
	}
	IMPLEMENT_CLASS(AMyCharacter, 2603982356);
	void AMyDefaultPawn::ServerMoveForward(float Value, FRotator Rotation)
	{
		MyDefaultPawn_eventServerMoveForward_Parms Parms;
		Parms.Value=Value;
		Parms.Rotation=Rotation;
		ProcessEvent(FindFunctionChecked(MULTIUSERTOOL_ServerMoveForward),&Parms);
	}
	void AMyDefaultPawn::ServerMoveRight(float Value, FRotator Rotation)
	{
		MyDefaultPawn_eventServerMoveRight_Parms Parms;
		Parms.Value=Value;
		Parms.Rotation=Rotation;
		ProcessEvent(FindFunctionChecked(MULTIUSERTOOL_ServerMoveRight),&Parms);
	}
	void AMyDefaultPawn::ServerMoveTop(float Value, FRotator Rotation)
	{
		MyDefaultPawn_eventServerMoveTop_Parms Parms;
		Parms.Value=Value;
		Parms.Rotation=Rotation;
		ProcessEvent(FindFunctionChecked(MULTIUSERTOOL_ServerMoveTop),&Parms);
	}
	void AMyDefaultPawn::SetCurrentFloatingName(const FString& Name)
	{
		MyDefaultPawn_eventSetCurrentFloatingName_Parms Parms;
		Parms.Name=Name;
		ProcessEvent(FindFunctionChecked(MULTIUSERTOOL_SetCurrentFloatingName),&Parms);
	}
	void AMyDefaultPawn::StaticRegisterNativesAMyDefaultPawn()
	{
		FNativeFunctionRegistrar::RegisterFunction(AMyDefaultPawn::StaticClass(), "OnRep_CurrentFloatingName",(Native)&AMyDefaultPawn::execOnRep_CurrentFloatingName);
		FNativeFunctionRegistrar::RegisterFunction(AMyDefaultPawn::StaticClass(), "OnRep_PosChange",(Native)&AMyDefaultPawn::execOnRep_PosChange);
		FNativeFunctionRegistrar::RegisterFunction(AMyDefaultPawn::StaticClass(), "OnRep_RotChange",(Native)&AMyDefaultPawn::execOnRep_RotChange);
		FNativeFunctionRegistrar::RegisterFunction(AMyDefaultPawn::StaticClass(), "ServerMoveForward",(Native)&AMyDefaultPawn::execServerMoveForward);
		FNativeFunctionRegistrar::RegisterFunction(AMyDefaultPawn::StaticClass(), "ServerMoveRight",(Native)&AMyDefaultPawn::execServerMoveRight);
		FNativeFunctionRegistrar::RegisterFunction(AMyDefaultPawn::StaticClass(), "ServerMoveTop",(Native)&AMyDefaultPawn::execServerMoveTop);
		FNativeFunctionRegistrar::RegisterFunction(AMyDefaultPawn::StaticClass(), "SetCurrentFloatingName",(Native)&AMyDefaultPawn::execSetCurrentFloatingName);
	}
	IMPLEMENT_CLASS(AMyDefaultPawn, 2545013474);
class UScriptStruct* FBoton::StaticStruct()
{
	extern MULTIUSERTOOL_API class UPackage* Z_Construct_UPackage__Script_MultiUserTool();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MULTIUSERTOOL_API class UScriptStruct* Z_Construct_UScriptStruct_FBoton();
		extern MULTIUSERTOOL_API uint32 Get_Z_Construct_UScriptStruct_FBoton_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBoton, Z_Construct_UPackage__Script_MultiUserTool(), TEXT("Boton"), sizeof(FBoton), Get_Z_Construct_UScriptStruct_FBoton_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBoton(FBoton::StaticStruct, TEXT("/Script/MultiUserTool"), TEXT("Boton"), false, nullptr, nullptr);
static struct FScriptStruct_MultiUserTool_StaticRegisterNativesFBoton
{
	FScriptStruct_MultiUserTool_StaticRegisterNativesFBoton()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("Boton")),new UScriptStruct::TCppStructOps<FBoton>);
	}
} ScriptStruct_MultiUserTool_StaticRegisterNativesFBoton;
	void AMyHUD::StaticRegisterNativesAMyHUD()
	{
	}
	IMPLEMENT_CLASS(AMyHUD, 361621189);
	void AMyPaperSpriteActor::StaticRegisterNativesAMyPaperSpriteActor()
	{
	}
	IMPLEMENT_CLASS(AMyPaperSpriteActor, 1416625475);
	void AMyPawn::StaticRegisterNativesAMyPawn()
	{
		FNativeFunctionRegistrar::RegisterFunction(AMyPawn::StaticClass(), "OnKBD",(Native)&AMyPawn::execOnKBD);
		FNativeFunctionRegistrar::RegisterFunction(AMyPawn::StaticClass(), "OnKBU",(Native)&AMyPawn::execOnKBU);
		FNativeFunctionRegistrar::RegisterFunction(AMyPawn::StaticClass(), "OnLBD",(Native)&AMyPawn::execOnLBD);
		FNativeFunctionRegistrar::RegisterFunction(AMyPawn::StaticClass(), "OnLBU",(Native)&AMyPawn::execOnLBU);
	}
	IMPLEMENT_CLASS(AMyPawn, 2929170186);
	void UMyRendererSettings::StaticRegisterNativesUMyRendererSettings()
	{
	}
	IMPLEMENT_CLASS(UMyRendererSettings, 2825583526);
	void UMyUserWidgetNeuron::StaticRegisterNativesUMyUserWidgetNeuron()
	{
		FNativeFunctionRegistrar::RegisterFunction(UMyUserWidgetNeuron::StaticClass(), "HideEnhacedNeurons",(Native)&UMyUserWidgetNeuron::execHideEnhacedNeurons);
		FNativeFunctionRegistrar::RegisterFunction(UMyUserWidgetNeuron::StaticClass(), "HideNotEnhacedNeurons",(Native)&UMyUserWidgetNeuron::execHideNotEnhacedNeurons);
		FNativeFunctionRegistrar::RegisterFunction(UMyUserWidgetNeuron::StaticClass(), "UnHideEnhacedNeurons",(Native)&UMyUserWidgetNeuron::execUnHideEnhacedNeurons);
		FNativeFunctionRegistrar::RegisterFunction(UMyUserWidgetNeuron::StaticClass(), "UnHideNotEnhacedNeurons",(Native)&UMyUserWidgetNeuron::execUnHideNotEnhacedNeurons);
	}
	IMPLEMENT_CLASS(UMyUserWidgetNeuron, 2239397);
	void UMyUserWidgetNeuronInfo::StaticRegisterNativesUMyUserWidgetNeuronInfo()
	{
		FNativeFunctionRegistrar::RegisterFunction(UMyUserWidgetNeuronInfo::StaticClass(), "SetInfo",(Native)&UMyUserWidgetNeuronInfo::execSetInfo);
	}
	IMPLEMENT_CLASS(UMyUserWidgetNeuronInfo, 1802567525);
	void UMyWidget::StaticRegisterNativesUMyWidget()
	{
		FNativeFunctionRegistrar::RegisterFunction(UMyWidget::StaticClass(), "AddItemToUI",(Native)&UMyWidget::execAddItemToUI);
	}
	IMPLEMENT_CLASS(UMyWidget, 3246970896);
	void ANavigatorHUD::StaticRegisterNativesANavigatorHUD()
	{
		FNativeFunctionRegistrar::RegisterFunction(ANavigatorHUD::StaticClass(), "AddMessageBP",(Native)&ANavigatorHUD::execAddMessageBP);
	}
	IMPLEMENT_CLASS(ANavigatorHUD, 4043715890);
	void ANetPawn::ServerMoveForward(float Value, FRotator Rotation)
	{
		NetPawn_eventServerMoveForward_Parms Parms;
		Parms.Value=Value;
		Parms.Rotation=Rotation;
		ProcessEvent(FindFunctionChecked(MULTIUSERTOOL_ServerMoveForward),&Parms);
	}
	void ANetPawn::ServerMoveRight(float Value, FRotator Rotation)
	{
		NetPawn_eventServerMoveRight_Parms Parms;
		Parms.Value=Value;
		Parms.Rotation=Rotation;
		ProcessEvent(FindFunctionChecked(MULTIUSERTOOL_ServerMoveRight),&Parms);
	}
	void ANetPawn::ServerMoveTop(float Value, FRotator Rotation)
	{
		NetPawn_eventServerMoveTop_Parms Parms;
		Parms.Value=Value;
		Parms.Rotation=Rotation;
		ProcessEvent(FindFunctionChecked(MULTIUSERTOOL_ServerMoveTop),&Parms);
	}
	void ANetPawn::StaticRegisterNativesANetPawn()
	{
		FNativeFunctionRegistrar::RegisterFunction(ANetPawn::StaticClass(), "MoveForward",(Native)&ANetPawn::execMoveForward);
		FNativeFunctionRegistrar::RegisterFunction(ANetPawn::StaticClass(), "MoveRight",(Native)&ANetPawn::execMoveRight);
		FNativeFunctionRegistrar::RegisterFunction(ANetPawn::StaticClass(), "MoveTop",(Native)&ANetPawn::execMoveTop);
		FNativeFunctionRegistrar::RegisterFunction(ANetPawn::StaticClass(), "OnRep_PosChange",(Native)&ANetPawn::execOnRep_PosChange);
		FNativeFunctionRegistrar::RegisterFunction(ANetPawn::StaticClass(), "OnRep_RotChange",(Native)&ANetPawn::execOnRep_RotChange);
		FNativeFunctionRegistrar::RegisterFunction(ANetPawn::StaticClass(), "ServerMoveForward",(Native)&ANetPawn::execServerMoveForward);
		FNativeFunctionRegistrar::RegisterFunction(ANetPawn::StaticClass(), "ServerMoveRight",(Native)&ANetPawn::execServerMoveRight);
		FNativeFunctionRegistrar::RegisterFunction(ANetPawn::StaticClass(), "ServerMoveTop",(Native)&ANetPawn::execServerMoveTop);
	}
	IMPLEMENT_CLASS(ANetPawn, 3243665722);
	void ANeuronForest::StaticRegisterNativesANeuronForest()
	{
	}
	IMPLEMENT_CLASS(ANeuronForest, 1619775157);
class UScriptStruct* FSlateNeuronMenuStyle::StaticStruct()
{
	extern MULTIUSERTOOL_API class UPackage* Z_Construct_UPackage__Script_MultiUserTool();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MULTIUSERTOOL_API class UScriptStruct* Z_Construct_UScriptStruct_FSlateNeuronMenuStyle();
		extern MULTIUSERTOOL_API uint32 Get_Z_Construct_UScriptStruct_FSlateNeuronMenuStyle_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSlateNeuronMenuStyle, Z_Construct_UPackage__Script_MultiUserTool(), TEXT("SlateNeuronMenuStyle"), sizeof(FSlateNeuronMenuStyle), Get_Z_Construct_UScriptStruct_FSlateNeuronMenuStyle_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSlateNeuronMenuStyle(FSlateNeuronMenuStyle::StaticStruct, TEXT("/Script/MultiUserTool"), TEXT("SlateNeuronMenuStyle"), false, nullptr, nullptr);
static struct FScriptStruct_MultiUserTool_StaticRegisterNativesFSlateNeuronMenuStyle
{
	FScriptStruct_MultiUserTool_StaticRegisterNativesFSlateNeuronMenuStyle()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SlateNeuronMenuStyle")),new UScriptStruct::TCppStructOps<FSlateNeuronMenuStyle>);
	}
} ScriptStruct_MultiUserTool_StaticRegisterNativesFSlateNeuronMenuStyle;
	void USlateNeuronMenuWidgetStyle::StaticRegisterNativesUSlateNeuronMenuWidgetStyle()
	{
	}
	IMPLEMENT_CLASS(USlateNeuronMenuWidgetStyle, 2577420161);
	void AXGameState::StaticRegisterNativesAXGameState()
	{
	}
	IMPLEMENT_CLASS(AXGameState, 2229538580);
	void AXPlayerController::EnhanceNeuron(int32 idneuron)
	{
		XPlayerController_eventEnhanceNeuron_Parms Parms;
		Parms.idneuron=idneuron;
		ProcessEvent(FindFunctionChecked(MULTIUSERTOOL_EnhanceNeuron),&Parms);
	}
	void AXPlayerController::HideEnhacedNeurons()
	{
		ProcessEvent(FindFunctionChecked(MULTIUSERTOOL_HideEnhacedNeurons),NULL);
	}
	void AXPlayerController::HideNotEnhacedNeurons()
	{
		ProcessEvent(FindFunctionChecked(MULTIUSERTOOL_HideNotEnhacedNeurons),NULL);
	}
	void AXPlayerController::PlayReplay()
	{
		ProcessEvent(FindFunctionChecked(MULTIUSERTOOL_PlayReplay),NULL);
	}
	void AXPlayerController::SetInfoNeuron(int32 idneuron, int32 idInfo, const FString& NeuronInfo)
	{
		XPlayerController_eventSetInfoNeuron_Parms Parms;
		Parms.idneuron=idneuron;
		Parms.idInfo=idInfo;
		Parms.NeuronInfo=NeuronInfo;
		ProcessEvent(FindFunctionChecked(MULTIUSERTOOL_SetInfoNeuron),&Parms);
	}
	void AXPlayerController::UnHideEnhacedNeurons()
	{
		ProcessEvent(FindFunctionChecked(MULTIUSERTOOL_UnHideEnhacedNeurons),NULL);
	}
	void AXPlayerController::UnHideNotEnhacedNeurons()
	{
		ProcessEvent(FindFunctionChecked(MULTIUSERTOOL_UnHideNotEnhacedNeurons),NULL);
	}
	void AXPlayerController::StaticRegisterNativesAXPlayerController()
	{
		FNativeFunctionRegistrar::RegisterFunction(AXPlayerController::StaticClass(), "EnhanceNeuron",(Native)&AXPlayerController::execEnhanceNeuron);
		FNativeFunctionRegistrar::RegisterFunction(AXPlayerController::StaticClass(), "GetAllMessages",(Native)&AXPlayerController::execGetAllMessages);
		FNativeFunctionRegistrar::RegisterFunction(AXPlayerController::StaticClass(), "HideEnhacedNeurons",(Native)&AXPlayerController::execHideEnhacedNeurons);
		FNativeFunctionRegistrar::RegisterFunction(AXPlayerController::StaticClass(), "HideNotEnhacedNeurons",(Native)&AXPlayerController::execHideNotEnhacedNeurons);
		FNativeFunctionRegistrar::RegisterFunction(AXPlayerController::StaticClass(), "PlayReplay",(Native)&AXPlayerController::execPlayReplay);
		FNativeFunctionRegistrar::RegisterFunction(AXPlayerController::StaticClass(), "SetInfoNeuron",(Native)&AXPlayerController::execSetInfoNeuron);
		FNativeFunctionRegistrar::RegisterFunction(AXPlayerController::StaticClass(), "ToggleNeuronInfoWidget",(Native)&AXPlayerController::execToggleNeuronInfoWidget);
		FNativeFunctionRegistrar::RegisterFunction(AXPlayerController::StaticClass(), "ToggleNeuronWidget",(Native)&AXPlayerController::execToggleNeuronWidget);
		FNativeFunctionRegistrar::RegisterFunction(AXPlayerController::StaticClass(), "UnHideEnhacedNeurons",(Native)&AXPlayerController::execUnHideEnhacedNeurons);
		FNativeFunctionRegistrar::RegisterFunction(AXPlayerController::StaticClass(), "UnHideNotEnhacedNeurons",(Native)&AXPlayerController::execUnHideNotEnhacedNeurons);
	}
	IMPLEMENT_CLASS(AXPlayerController, 899705539);
	void AXPlayerState::UserChat(FSChatMsg const& newmessage)
	{
		XPlayerState_eventUserChat_Parms Parms;
		Parms.newmessage=newmessage;
		ProcessEvent(FindFunctionChecked(MULTIUSERTOOL_UserChat),&Parms);
	}
	void AXPlayerState::UserChatP(FSChatMsg const& newmessage, FText const& userDestination)
	{
		XPlayerState_eventUserChatP_Parms Parms;
		Parms.newmessage=newmessage;
		Parms.userDestination=userDestination;
		ProcessEvent(FindFunctionChecked(MULTIUSERTOOL_UserChatP),&Parms);
	}
	void AXPlayerState::UserChatRPC(FSChatMsg const& newmessage, FText const& userDestination, bool isPrivate)
	{
		XPlayerState_eventUserChatRPC_Parms Parms;
		Parms.newmessage=newmessage;
		Parms.userDestination=userDestination;
		Parms.isPrivate=isPrivate ? true : false;
		ProcessEvent(FindFunctionChecked(MULTIUSERTOOL_UserChatRPC),&Parms);
	}
	void AXPlayerState::StaticRegisterNativesAXPlayerState()
	{
		FNativeFunctionRegistrar::RegisterFunction(AXPlayerState::StaticClass(), "GetTeamNumber",(Native)&AXPlayerState::execGetTeamNumber);
		FNativeFunctionRegistrar::RegisterFunction(AXPlayerState::StaticClass(), "UserChat",(Native)&AXPlayerState::execUserChat);
		FNativeFunctionRegistrar::RegisterFunction(AXPlayerState::StaticClass(), "UserChatP",(Native)&AXPlayerState::execUserChatP);
		FNativeFunctionRegistrar::RegisterFunction(AXPlayerState::StaticClass(), "UserChatRPC",(Native)&AXPlayerState::execUserChatRPC);
	}
	IMPLEMENT_CLASS(AXPlayerState, 60466685);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_UMeshComponent();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UClass* Z_Construct_UClass_UPrimitiveComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMeshComponent_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FRotator();
	ENGINE_API class UClass* Z_Construct_UClass_APawn();
	ENGINE_API class UClass* Z_Construct_UClass_UDirectionalLightComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USpotLightComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USpringArmComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AGameMode();
	ADVANCEDSESSIONS_API class UClass* Z_Construct_UClass_UAdvancedFriendsGameInstance();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter();
	ENGINE_API class UClass* Z_Construct_UClass_ADefaultPawn();
	ENGINE_API class UClass* Z_Construct_UClass_AHUD();
	ENGINE_API class UClass* Z_Construct_UClass_UTexture2D_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UFont_NoRegister();
	PAPER2D_API class UClass* Z_Construct_UClass_APaperSpriteActor();
	PAPER2D_API class UClass* Z_Construct_UClass_UPaperSpriteComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_URendererSettings();
	UMG_API class UClass* Z_Construct_UClass_UUserWidget();
	ENGINE_API class UClass* Z_Construct_UClass_USceneComponent_NoRegister();
	SLATECORE_API class UScriptStruct* Z_Construct_UScriptStruct_FSlateWidgetStyle();
	SLATECORE_API class UClass* Z_Construct_UClass_USlateWidgetStyleContainerBase();
	ENGINE_API class UClass* Z_Construct_UClass_AGameState();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerController();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerState();

	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_UBillboardingMeshComponent_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_UBillboardingMeshComponent();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_UMyBillboardingMeshComponent_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_UMyBillboardingMeshComponent();
	MULTIUSERTOOL_API class UScriptStruct* Z_Construct_UScriptStruct_FGeneratedMeshTriangle();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_ACodeGeneratedNeuron_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_ACodeGeneratedNeuron();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_AImpostorNeuronForest_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_AImpostorNeuronForest();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_ANeuron_CustomOnBeginMouseOver();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_ANeuron_Enhance();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_ANeuron_EnhanceMultiCast();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_ANeuron_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_ANeuron();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_ANavigator_OnRep_PosChange();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_ANavigator_OnRep_RotChange();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_ANavigator_ServerMoveForward();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_ANavigator_ServerMoveRight();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_ANavigator_ServerMoveUpDown();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_ANavigator_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_ANavigator();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_AMultiUserToolGameMode_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_AMultiUserToolGameMode();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AMyActorNotification_CustomOnBeginMouseOver();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_AMyActorNotification_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_AMyActorNotification();
	MULTIUSERTOOL_API class UScriptStruct* Z_Construct_UScriptStruct_FSChatMsg();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_UMyAdvancedFriendsGameInstance_GetMD5Sum();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_UMyAdvancedFriendsGameInstance_GuestLogin();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_UMyAdvancedFriendsGameInstance_Login();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_UMyAdvancedFriendsGameInstance_NewMessage();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_UMyAdvancedFriendsGameInstance_Register();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_UMyAdvancedFriendsGameInstance_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_UMyAdvancedFriendsGameInstance();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_UMyBlueprintFunctionLibrary_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_UMyBlueprintFunctionLibrary();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_AMyCharacter_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_AMyCharacter();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AMyDefaultPawn_OnRep_CurrentFloatingName();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AMyDefaultPawn_OnRep_PosChange();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AMyDefaultPawn_OnRep_RotChange();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AMyDefaultPawn_ServerMoveForward();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AMyDefaultPawn_ServerMoveRight();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AMyDefaultPawn_ServerMoveTop();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AMyDefaultPawn_SetCurrentFloatingName();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_AMyDefaultPawn_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_AMyDefaultPawn();
	MULTIUSERTOOL_API class UScriptStruct* Z_Construct_UScriptStruct_FBoton();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_AMyHUD_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_AMyHUD();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_AMyPaperSpriteActor_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_AMyPaperSpriteActor();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AMyPawn_OnKBD();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AMyPawn_OnKBU();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AMyPawn_OnLBD();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AMyPawn_OnLBU();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_AMyPawn_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_AMyPawn();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_UMyRendererSettings_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_UMyRendererSettings();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_UMyUserWidgetNeuron_HideEnhacedNeurons();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_UMyUserWidgetNeuron_HideNotEnhacedNeurons();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_UMyUserWidgetNeuron_UnHideEnhacedNeurons();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_UMyUserWidgetNeuron_UnHideNotEnhacedNeurons();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_UMyUserWidgetNeuron_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_UMyUserWidgetNeuron();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_UMyUserWidgetNeuronInfo_SetInfo();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_UMyUserWidgetNeuronInfo_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_UMyUserWidgetNeuronInfo();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_UMyWidget_AddItemToUI();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_UMyWidget_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_UMyWidget();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_ANavigatorHUD_AddMessageBP();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_ANavigatorHUD_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_ANavigatorHUD();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_ANetPawn_MoveForward();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_ANetPawn_MoveRight();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_ANetPawn_MoveTop();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_ANetPawn_OnRep_PosChange();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_ANetPawn_OnRep_RotChange();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_ANetPawn_ServerMoveForward();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_ANetPawn_ServerMoveRight();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_ANetPawn_ServerMoveTop();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_ANetPawn_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_ANetPawn();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_ANeuronForest_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_ANeuronForest();
	MULTIUSERTOOL_API class UScriptStruct* Z_Construct_UScriptStruct_FSlateNeuronMenuStyle();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_USlateNeuronMenuWidgetStyle_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_USlateNeuronMenuWidgetStyle();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_AXGameState_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_AXGameState();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AXPlayerController_EnhanceNeuron();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AXPlayerController_GetAllMessages();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AXPlayerController_HideEnhacedNeurons();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AXPlayerController_HideNotEnhacedNeurons();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AXPlayerController_PlayReplay();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AXPlayerController_SetInfoNeuron();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AXPlayerController_ToggleNeuronInfoWidget();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AXPlayerController_ToggleNeuronWidget();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AXPlayerController_UnHideEnhacedNeurons();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AXPlayerController_UnHideNotEnhacedNeurons();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_AXPlayerController_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_AXPlayerController();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AXPlayerState_GetTeamNumber();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AXPlayerState_UserChat();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AXPlayerState_UserChatP();
	MULTIUSERTOOL_API class UFunction* Z_Construct_UFunction_AXPlayerState_UserChatRPC();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_AXPlayerState_NoRegister();
	MULTIUSERTOOL_API class UClass* Z_Construct_UClass_AXPlayerState();
	MULTIUSERTOOL_API class UPackage* Z_Construct_UPackage__Script_MultiUserTool();
	UClass* Z_Construct_UClass_UBillboardingMeshComponent_NoRegister()
	{
		return UBillboardingMeshComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UBillboardingMeshComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMeshComponent();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = UBillboardingMeshComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Mobility Trigger"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BillboardingMeshComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("BillboardingMeshComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("//UCLASS(hidecategories = (Object, LOD, Physics, Collision), editinlinenew, meta = (BlueprintSpawnableComponent), ClassGroup = Rendering)"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBillboardingMeshComponent(Z_Construct_UClass_UBillboardingMeshComponent, &UBillboardingMeshComponent::StaticClass, TEXT("UBillboardingMeshComponent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBillboardingMeshComponent);
	UClass* Z_Construct_UClass_UMyBillboardingMeshComponent_NoRegister()
	{
		return UMyBillboardingMeshComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UMyBillboardingMeshComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBillboardingMeshComponent();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = UMyBillboardingMeshComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Mobility Trigger"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyBillboardingMeshComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MyBillboardingMeshComponent.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMyBillboardingMeshComponent(Z_Construct_UClass_UMyBillboardingMeshComponent, &UMyBillboardingMeshComponent::StaticClass, TEXT("UMyBillboardingMeshComponent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMyBillboardingMeshComponent);
	UScriptStruct* Z_Construct_UScriptStruct_FGeneratedMeshTriangle()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MultiUserTool();
		extern uint32 Get_Z_Construct_UScriptStruct_FGeneratedMeshTriangle_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GeneratedMeshTriangle"), sizeof(FGeneratedMeshTriangle), Get_Z_Construct_UScriptStruct_FGeneratedMeshTriangle_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GeneratedMeshTriangle"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGeneratedMeshTriangle>, EStructFlags(0x00000001));
			UProperty* NewProp_Vertex2 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Vertex2"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Vertex2, FGeneratedMeshTriangle), 0x0010000000000001, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Vertex1 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Vertex1"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Vertex1, FGeneratedMeshTriangle), 0x0010000000000001, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Vertex0 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Vertex0"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Vertex0, FGeneratedMeshTriangle), 0x0010000000000001, Z_Construct_UScriptStruct_FVector());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("CodeGeneratedNeuron.h"));
			MetaData->SetValue(NewProp_Vertex2, TEXT("Category"), TEXT("Triangle"));
			MetaData->SetValue(NewProp_Vertex2, TEXT("ModuleRelativePath"), TEXT("CodeGeneratedNeuron.h"));
			MetaData->SetValue(NewProp_Vertex1, TEXT("Category"), TEXT("Triangle"));
			MetaData->SetValue(NewProp_Vertex1, TEXT("ModuleRelativePath"), TEXT("CodeGeneratedNeuron.h"));
			MetaData->SetValue(NewProp_Vertex0, TEXT("Category"), TEXT("Triangle"));
			MetaData->SetValue(NewProp_Vertex0, TEXT("ModuleRelativePath"), TEXT("CodeGeneratedNeuron.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGeneratedMeshTriangle_CRC() { return 2960519263U; }
	UClass* Z_Construct_UClass_ACodeGeneratedNeuron_NoRegister()
	{
		return ACodeGeneratedNeuron::StaticClass();
	}
	UClass* Z_Construct_UClass_ACodeGeneratedNeuron()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = ACodeGeneratedNeuron::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("CodeGeneratedNeuron.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("CodeGeneratedNeuron.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ACodeGeneratedNeuron(Z_Construct_UClass_ACodeGeneratedNeuron, &ACodeGeneratedNeuron::StaticClass, TEXT("ACodeGeneratedNeuron"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ACodeGeneratedNeuron);
	UClass* Z_Construct_UClass_AImpostorNeuronForest_NoRegister()
	{
		return AImpostorNeuronForest::StaticClass();
	}
	UClass* Z_Construct_UClass_AImpostorNeuronForest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = AImpostorNeuronForest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ImpostorNeuronForest.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("ImpostorNeuronForest.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("class FCustomMeshTriangle;"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AImpostorNeuronForest(Z_Construct_UClass_AImpostorNeuronForest, &AImpostorNeuronForest::StaticClass, TEXT("AImpostorNeuronForest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AImpostorNeuronForest);
	UFunction* Z_Construct_UFunction_ANeuron_CustomOnBeginMouseOver()
	{
		struct Neuron_eventCustomOnBeginMouseOver_Parms
		{
			UPrimitiveComponent* TouchedComponent;
		};
		UObject* Outer=Z_Construct_UClass_ANeuron();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CustomOnBeginMouseOver"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535, sizeof(Neuron_eventCustomOnBeginMouseOver_Parms));
			UProperty* NewProp_TouchedComponent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TouchedComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(TouchedComponent, Neuron_eventCustomOnBeginMouseOver_Parms), 0x0010000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Neuron.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Function to handle the interaction"));
			MetaData->SetValue(NewProp_TouchedComponent, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ANeuron_Enhance()
	{
		UObject* Outer=Z_Construct_UClass_ANeuron();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Enhance"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80220CC0, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Neuron.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ANeuron_EnhanceMultiCast()
	{
		UObject* Outer=Z_Construct_UClass_ANeuron();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EnhanceMultiCast"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80024CC0, 65535, sizeof(Neuron_eventEnhanceMultiCast_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(enhace, Neuron_eventEnhanceMultiCast_Parms, bool);
			UProperty* NewProp_enhace = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("enhace"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(enhace, Neuron_eventEnhanceMultiCast_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(enhace, Neuron_eventEnhanceMultiCast_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Neuron.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("then the server calls the function with a multicast that executes on all clients and the server"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ANeuron_NoRegister()
	{
		return ANeuron::StaticClass();
	}
	UClass* Z_Construct_UClass_ANeuron()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = ANeuron::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_ANeuron_CustomOnBeginMouseOver());
				OuterClass->LinkChild(Z_Construct_UFunction_ANeuron_Enhance());
				OuterClass->LinkChild(Z_Construct_UFunction_ANeuron_EnhanceMultiCast());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Materials = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Materials"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Materials, ANeuron), 0x0010000000000001);
				UProperty* NewProp_Materials_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Materials, TEXT("Materials"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UMaterialInterface_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(isEnhaced, ANeuron, bool);
				UProperty* NewProp_isEnhaced = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("isEnhaced"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(isEnhaced, ANeuron), 0x0010000000020021, CPP_BOOL_PROPERTY_BITMASK(isEnhaced, ANeuron), sizeof(bool), true);
				UProperty* NewProp_idneuron = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("idneuron"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(idneuron, ANeuron), 0x0010000000000025);
				UProperty* NewProp_neuronMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("neuronMesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(neuronMesh, ANeuron), 0x00100000000a0029, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ANeuron_CustomOnBeginMouseOver(), "CustomOnBeginMouseOver"); // 545362126
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ANeuron_Enhance(), "Enhance"); // 553757315
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ANeuron_EnhanceMultiCast(), "EnhanceMultiCast"); // 4262267800
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Neuron.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Neuron.h"));
				MetaData->SetValue(NewProp_Materials, TEXT("Category"), TEXT("Neuron"));
				MetaData->SetValue(NewProp_Materials, TEXT("ModuleRelativePath"), TEXT("Neuron.h"));
				MetaData->SetValue(NewProp_isEnhaced, TEXT("Category"), TEXT("Neuron"));
				MetaData->SetValue(NewProp_isEnhaced, TEXT("ModuleRelativePath"), TEXT("Neuron.h"));
				MetaData->SetValue(NewProp_isEnhaced, TEXT("ToolTip"), TEXT("UPROPERTY(Transient, ReplicatedUsing = OnRep_IsEnhaced)"));
				MetaData->SetValue(NewProp_idneuron, TEXT("Category"), TEXT("NeuronUi"));
				MetaData->SetValue(NewProp_idneuron, TEXT("ModuleRelativePath"), TEXT("Neuron.h"));
				MetaData->SetValue(NewProp_neuronMesh, TEXT("Category"), TEXT("Mesh"));
				MetaData->SetValue(NewProp_neuronMesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_neuronMesh, TEXT("ModuleRelativePath"), TEXT("Neuron.h"));
				MetaData->SetValue(NewProp_neuronMesh, TEXT("ToolTip"), TEXT("Para el material"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ANeuron(Z_Construct_UClass_ANeuron, &ANeuron::StaticClass, TEXT("ANeuron"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ANeuron);
	UFunction* Z_Construct_UFunction_ANavigator_OnRep_PosChange()
	{
		UObject* Outer=Z_Construct_UClass_ANavigator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnRep_PosChange"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Navigator.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ANavigator_OnRep_RotChange()
	{
		UObject* Outer=Z_Construct_UClass_ANavigator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnRep_RotChange"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Navigator.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ANavigator_ServerMoveForward()
	{
		UObject* Outer=Z_Construct_UClass_ANavigator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ServerMoveForward"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80A20CC0, 65535, sizeof(Navigator_eventServerMoveForward_Parms));
			UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Rotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Rotation, Navigator_eventServerMoveForward_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, Navigator_eventServerMoveForward_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Navigator.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("MOVIMIENTOS DE TRANSLACION"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ANavigator_ServerMoveRight()
	{
		UObject* Outer=Z_Construct_UClass_ANavigator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ServerMoveRight"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80A20CC0, 65535, sizeof(Navigator_eventServerMoveRight_Parms));
			UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Rotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Rotation, Navigator_eventServerMoveRight_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, Navigator_eventServerMoveRight_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Navigator.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ANavigator_ServerMoveUpDown()
	{
		UObject* Outer=Z_Construct_UClass_ANavigator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ServerMoveUpDown"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80A20CC0, 65535, sizeof(Navigator_eventServerMoveUpDown_Parms));
			UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Rotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Rotation, Navigator_eventServerMoveUpDown_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, Navigator_eventServerMoveUpDown_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Navigator.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ANavigator_NoRegister()
	{
		return ANavigator::StaticClass();
	}
	UClass* Z_Construct_UClass_ANavigator()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APawn();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = ANavigator::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_ANavigator_OnRep_PosChange());
				OuterClass->LinkChild(Z_Construct_UFunction_ANavigator_OnRep_RotChange());
				OuterClass->LinkChild(Z_Construct_UFunction_ANavigator_ServerMoveForward());
				OuterClass->LinkChild(Z_Construct_UFunction_ANavigator_ServerMoveRight());
				OuterClass->LinkChild(Z_Construct_UFunction_ANavigator_ServerMoveUpDown());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_DirLight = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DirLight"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DirLight, ANavigator), 0x0020080000080009, Z_Construct_UClass_UDirectionalLightComponent_NoRegister());
				UProperty* NewProp_OurLight2 = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OurLight2"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OurLight2, ANavigator), 0x0020080000080009, Z_Construct_UClass_USpotLightComponent_NoRegister());
				UProperty* NewProp_OurLightSpringArm = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OurLightSpringArm"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OurLightSpringArm, ANavigator), 0x00200800000a0009, Z_Construct_UClass_USpringArmComponent_NoRegister());
				UProperty* NewProp_OurCamera = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OurCamera"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OurCamera, ANavigator), 0x00200800000a0009, Z_Construct_UClass_UCameraComponent_NoRegister());
				UProperty* NewProp_OurCameraSpringArm = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OurCameraSpringArm"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OurCameraSpringArm, ANavigator), 0x00200800000a0009, Z_Construct_UClass_USpringArmComponent_NoRegister());
				UProperty* NewProp_NavigatorMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NavigatorMesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(NavigatorMesh, ANavigator), 0x00200800000a0009, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
				UProperty* NewProp_CurrentRotation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentRotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(CurrentRotation, ANavigator), 0x0010000100002020, Z_Construct_UScriptStruct_FRotator());
				NewProp_CurrentRotation->RepNotifyFunc = FName(TEXT("OnRep_RotChange"));
				UProperty* NewProp_CurrentPosition = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(CurrentPosition, ANavigator), 0x0010000100002020, Z_Construct_UScriptStruct_FVector());
				NewProp_CurrentPosition->RepNotifyFunc = FName(TEXT("OnRep_PosChange"));
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ANavigator_OnRep_PosChange(), "OnRep_PosChange"); // 1348108260
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ANavigator_OnRep_RotChange(), "OnRep_RotChange"); // 3795666724
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ANavigator_ServerMoveForward(), "ServerMoveForward"); // 3216696541
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ANavigator_ServerMoveRight(), "ServerMoveRight"); // 231163170
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ANavigator_ServerMoveUpDown(), "ServerMoveUpDown"); // 830256854
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Navigator.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Navigator.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("UCLASS()\nclass MULTIUSERTOOL_API ANavigator : public APawn\n{\n       GENERATED_BODY()\n\npublic:\n       // Sets default values for this pawn's properties\n       ANavigator();\n\n       // Called when the game starts or when spawned\n       virtual void BeginPlay() override;\n\n       // Called every frame\n       virtual void Tick( float DeltaSeconds ) override;\n\n       // Called to bind functionality to input\n       virtual void SetupPlayerInputComponent(class UInputComponent* InputComponent) override;\n\n\n\n};"));
				MetaData->SetValue(NewProp_DirLight, TEXT("Category"), TEXT("Navigator"));
				MetaData->SetValue(NewProp_DirLight, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_DirLight, TEXT("ModuleRelativePath"), TEXT("Navigator.h"));
				MetaData->SetValue(NewProp_OurLight2, TEXT("Category"), TEXT("Navigator"));
				MetaData->SetValue(NewProp_OurLight2, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_OurLight2, TEXT("ModuleRelativePath"), TEXT("Navigator.h"));
				MetaData->SetValue(NewProp_OurLightSpringArm, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_OurLightSpringArm, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_OurLightSpringArm, TEXT("ModuleRelativePath"), TEXT("Navigator.h"));
				MetaData->SetValue(NewProp_OurLightSpringArm, TEXT("ToolTip"), TEXT("UPROPERTY(VisibleAnywhere, Category = \"Camera\")DUDAS"));
				MetaData->SetValue(NewProp_OurCamera, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_OurCamera, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_OurCamera, TEXT("ModuleRelativePath"), TEXT("Navigator.h"));
				MetaData->SetValue(NewProp_OurCamera, TEXT("ToolTip"), TEXT("Primary camera of the player"));
				MetaData->SetValue(NewProp_OurCameraSpringArm, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_OurCameraSpringArm, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_OurCameraSpringArm, TEXT("ModuleRelativePath"), TEXT("Navigator.h"));
				MetaData->SetValue(NewProp_NavigatorMesh, TEXT("Category"), TEXT("Mesh"));
				MetaData->SetValue(NewProp_NavigatorMesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_NavigatorMesh, TEXT("ModuleRelativePath"), TEXT("Navigator.h"));
				MetaData->SetValue(NewProp_NavigatorMesh, TEXT("ToolTip"), TEXT("UPROPERTY(VisibleDefaultsOnly, Category = Mesh)"));
				MetaData->SetValue(NewProp_CurrentRotation, TEXT("ModuleRelativePath"), TEXT("Navigator.h"));
				MetaData->SetValue(NewProp_CurrentPosition, TEXT("ModuleRelativePath"), TEXT("Navigator.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ANavigator(Z_Construct_UClass_ANavigator, &ANavigator::StaticClass, TEXT("ANavigator"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ANavigator);
	UClass* Z_Construct_UClass_AMultiUserToolGameMode_NoRegister()
	{
		return AMultiUserToolGameMode::StaticClass();
	}
	UClass* Z_Construct_UClass_AMultiUserToolGameMode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameMode();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = AMultiUserToolGameMode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2090028C;


				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Info Rendering MovementReplication Replication Actor Input Movement Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MultiUserToolGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MultiUserToolGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMultiUserToolGameMode(Z_Construct_UClass_AMultiUserToolGameMode, &AMultiUserToolGameMode::StaticClass, TEXT("AMultiUserToolGameMode"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AMultiUserToolGameMode);
	UFunction* Z_Construct_UFunction_AMyActorNotification_CustomOnBeginMouseOver()
	{
		struct MyActorNotification_eventCustomOnBeginMouseOver_Parms
		{
			UPrimitiveComponent* TouchedComponent;
		};
		UObject* Outer=Z_Construct_UClass_AMyActorNotification();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CustomOnBeginMouseOver"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(MyActorNotification_eventCustomOnBeginMouseOver_Parms));
			UProperty* NewProp_TouchedComponent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TouchedComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(TouchedComponent, MyActorNotification_eventCustomOnBeginMouseOver_Parms), 0x0010000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MyActorNotification.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Function to handle the interaction"));
			MetaData->SetValue(NewProp_TouchedComponent, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AMyActorNotification_NoRegister()
	{
		return AMyActorNotification::StaticClass();
	}
	UClass* Z_Construct_UClass_AMyActorNotification()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = AMyActorNotification::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AMyActorNotification_CustomOnBeginMouseOver());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_NeuronInfo = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NeuronInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(NeuronInfo, AMyActorNotification), 0x0010000000020025);
				UProperty* NewProp_sphereMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("sphereMesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(sphereMesh, AMyActorNotification), 0x001000000008002d, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
				UProperty* NewProp_idInfo = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("idInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(idInfo, AMyActorNotification), 0x0010000000000025);
				UProperty* NewProp_idneuron = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("idneuron"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(idneuron, AMyActorNotification), 0x0010000000000025);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMyActorNotification_CustomOnBeginMouseOver(), "CustomOnBeginMouseOver"); // 4232665299
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyActorNotification.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MyActorNotification.h"));
				MetaData->SetValue(NewProp_NeuronInfo, TEXT("Category"), TEXT("NeuronUi"));
				MetaData->SetValue(NewProp_NeuronInfo, TEXT("ModuleRelativePath"), TEXT("Public/MyActorNotification.h"));
				MetaData->SetValue(NewProp_sphereMesh, TEXT("Category"), TEXT("NeuronUi"));
				MetaData->SetValue(NewProp_sphereMesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_sphereMesh, TEXT("ModuleRelativePath"), TEXT("Public/MyActorNotification.h"));
				MetaData->SetValue(NewProp_idInfo, TEXT("Category"), TEXT("NeuronUi"));
				MetaData->SetValue(NewProp_idInfo, TEXT("ModuleRelativePath"), TEXT("Public/MyActorNotification.h"));
				MetaData->SetValue(NewProp_idneuron, TEXT("Category"), TEXT("NeuronUi"));
				MetaData->SetValue(NewProp_idneuron, TEXT("ModuleRelativePath"), TEXT("Public/MyActorNotification.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMyActorNotification(Z_Construct_UClass_AMyActorNotification, &AMyActorNotification::StaticClass, TEXT("AMyActorNotification"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AMyActorNotification);
	UScriptStruct* Z_Construct_UScriptStruct_FSChatMsg()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MultiUserTool();
		extern uint32 Get_Z_Construct_UScriptStruct_FSChatMsg_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("SChatMsg"), sizeof(FSChatMsg), Get_Z_Construct_UScriptStruct_FSChatMsg_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SChatMsg"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSChatMsg>, EStructFlags(0x00000001));
			UProperty* NewProp_Text = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Text"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(Text, FSChatMsg), 0x0010000000000000);
			UProperty* NewProp_Username = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Username"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(Username, FSChatMsg), 0x0010000000000000);
			UProperty* NewProp_Type = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Type"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Type, FSChatMsg), 0x0010000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/MyAdvancedFriendsGameInstance.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Struct to hold the message data to be passed between classes"));
			MetaData->SetValue(NewProp_Text, TEXT("ModuleRelativePath"), TEXT("Public/MyAdvancedFriendsGameInstance.h"));
			MetaData->SetValue(NewProp_Username, TEXT("ModuleRelativePath"), TEXT("Public/MyAdvancedFriendsGameInstance.h"));
			MetaData->SetValue(NewProp_Type, TEXT("ModuleRelativePath"), TEXT("Public/MyAdvancedFriendsGameInstance.h"));
			MetaData->SetValue(NewProp_Type, TEXT("ToolTip"), TEXT("UProperty means this variable will be replicated"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSChatMsg_CRC() { return 925592502U; }
	UFunction* Z_Construct_UFunction_UMyAdvancedFriendsGameInstance_GetMD5Sum()
	{
		struct MyAdvancedFriendsGameInstance_eventGetMD5Sum_Parms
		{
			FString InputText;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UMyAdvancedFriendsGameInstance();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetMD5Sum"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(MyAdvancedFriendsGameInstance_eventGetMD5Sum_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, MyAdvancedFriendsGameInstance_eventGetMD5Sum_Parms), 0x0010000000000580);
			UProperty* NewProp_InputText = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InputText"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(InputText, MyAdvancedFriendsGameInstance_eventGetMD5Sum_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Hash"));
			MetaData->SetValue(ReturnFunction, TEXT("CompactNodeTitle"), TEXT("MD5"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get MD5 from string"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("md5 hash string"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MyAdvancedFriendsGameInstance.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Md5 generated from string"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMyAdvancedFriendsGameInstance_GuestLogin()
	{
		UObject* Outer=Z_Construct_UClass_UMyAdvancedFriendsGameInstance();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GuestLogin"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Guest"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Guest Login"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Guest login"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MyAdvancedFriendsGameInstance.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Guest Login"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMyAdvancedFriendsGameInstance_Login()
	{
		struct MyAdvancedFriendsGameInstance_eventLogin_Parms
		{
			FString email;
			FString pass;
		};
		UObject* Outer=Z_Construct_UClass_UMyAdvancedFriendsGameInstance();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Login"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(MyAdvancedFriendsGameInstance_eventLogin_Parms));
			UProperty* NewProp_pass = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("pass"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(pass, MyAdvancedFriendsGameInstance_eventLogin_Parms), 0x0010000000000080);
			UProperty* NewProp_email = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("email"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(email, MyAdvancedFriendsGameInstance_eventLogin_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("REST"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("REST login"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("REST login"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MyAdvancedFriendsGameInstance.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("REST Login Request"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMyAdvancedFriendsGameInstance_NewMessage()
	{
		struct MyAdvancedFriendsGameInstance_eventNewMessage_Parms
		{
			FSChatMsg newmessage;
			FText receiver;
		};
		UObject* Outer=Z_Construct_UClass_UMyAdvancedFriendsGameInstance();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("NewMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(MyAdvancedFriendsGameInstance_eventNewMessage_Parms));
			UProperty* NewProp_receiver = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("receiver"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(receiver, MyAdvancedFriendsGameInstance_eventNewMessage_Parms), 0x0010000000000082);
			UProperty* NewProp_newmessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newmessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(newmessage, MyAdvancedFriendsGameInstance_eventNewMessage_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FSChatMsg());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("REST"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("REST New Message"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("REST New Message"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MyAdvancedFriendsGameInstance.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("REST put New Message on session"));
			MetaData->SetValue(NewProp_receiver, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_newmessage, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMyAdvancedFriendsGameInstance_Register()
	{
		struct MyAdvancedFriendsGameInstance_eventRegister_Parms
		{
			FString userNameInput;
			FString userEmailInput;
			FString userPasswordInput;
			FString invitationCode;
		};
		UObject* Outer=Z_Construct_UClass_UMyAdvancedFriendsGameInstance();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Register"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(MyAdvancedFriendsGameInstance_eventRegister_Parms));
			UProperty* NewProp_invitationCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("invitationCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(invitationCode, MyAdvancedFriendsGameInstance_eventRegister_Parms), 0x0010000000000080);
			UProperty* NewProp_userPasswordInput = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("userPasswordInput"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(userPasswordInput, MyAdvancedFriendsGameInstance_eventRegister_Parms), 0x0010000000000080);
			UProperty* NewProp_userEmailInput = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("userEmailInput"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(userEmailInput, MyAdvancedFriendsGameInstance_eventRegister_Parms), 0x0010000000000080);
			UProperty* NewProp_userNameInput = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("userNameInput"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(userNameInput, MyAdvancedFriendsGameInstance_eventRegister_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("REST"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("REST Register"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("REST register"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MyAdvancedFriendsGameInstance.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("REST Register Request"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UMyAdvancedFriendsGameInstance_NoRegister()
	{
		return UMyAdvancedFriendsGameInstance::StaticClass();
	}
	UClass* Z_Construct_UClass_UMyAdvancedFriendsGameInstance()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAdvancedFriendsGameInstance();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = UMyAdvancedFriendsGameInstance::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100088;

				OuterClass->LinkChild(Z_Construct_UFunction_UMyAdvancedFriendsGameInstance_GetMD5Sum());
				OuterClass->LinkChild(Z_Construct_UFunction_UMyAdvancedFriendsGameInstance_GuestLogin());
				OuterClass->LinkChild(Z_Construct_UFunction_UMyAdvancedFriendsGameInstance_Login());
				OuterClass->LinkChild(Z_Construct_UFunction_UMyAdvancedFriendsGameInstance_NewMessage());
				OuterClass->LinkChild(Z_Construct_UFunction_UMyAdvancedFriendsGameInstance_Register());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_sessionId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("sessionId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(sessionId, UMyAdvancedFriendsGameInstance), 0x0010000000000005);
				UProperty* NewProp_registrationFailed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("registrationFailed"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(registrationFailed, UMyAdvancedFriendsGameInstance), 0x0010000000000005);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsGuest, UMyAdvancedFriendsGameInstance, bool);
				UProperty* NewProp_IsGuest = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IsGuest"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsGuest, UMyAdvancedFriendsGameInstance), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(IsGuest, UMyAdvancedFriendsGameInstance), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(userIsRegistered, UMyAdvancedFriendsGameInstance, bool);
				UProperty* NewProp_userIsRegistered = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("userIsRegistered"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(userIsRegistered, UMyAdvancedFriendsGameInstance), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(userIsRegistered, UMyAdvancedFriendsGameInstance), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(userIsLogged, UMyAdvancedFriendsGameInstance, bool);
				UProperty* NewProp_userIsLogged = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("userIsLogged"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(userIsLogged, UMyAdvancedFriendsGameInstance), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(userIsLogged, UMyAdvancedFriendsGameInstance), sizeof(bool), true);
				UProperty* NewProp_userToken = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("userToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(userToken, UMyAdvancedFriendsGameInstance), 0x0010000000000005);
				UProperty* NewProp_userName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("userName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(userName, UMyAdvancedFriendsGameInstance), 0x0010000000000005);
				UProperty* NewProp_userId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("userId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(userId, UMyAdvancedFriendsGameInstance), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMyAdvancedFriendsGameInstance_GetMD5Sum(), "GetMD5Sum"); // 911739007
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMyAdvancedFriendsGameInstance_GuestLogin(), "GuestLogin"); // 1947913635
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMyAdvancedFriendsGameInstance_Login(), "Login"); // 1059038790
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMyAdvancedFriendsGameInstance_NewMessage(), "NewMessage"); // 928792666
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMyAdvancedFriendsGameInstance_Register(), "Register"); // 925783014
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyAdvancedFriendsGameInstance.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MyAdvancedFriendsGameInstance.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_sessionId, TEXT("Category"), TEXT("Session"));
				MetaData->SetValue(NewProp_sessionId, TEXT("ModuleRelativePath"), TEXT("Public/MyAdvancedFriendsGameInstance.h"));
				MetaData->SetValue(NewProp_sessionId, TEXT("ToolTip"), TEXT("Session id"));
				MetaData->SetValue(NewProp_registrationFailed, TEXT("Category"), TEXT("User"));
				MetaData->SetValue(NewProp_registrationFailed, TEXT("ModuleRelativePath"), TEXT("Public/MyAdvancedFriendsGameInstance.h"));
				MetaData->SetValue(NewProp_registrationFailed, TEXT("ToolTip"), TEXT("User registration error msg"));
				MetaData->SetValue(NewProp_IsGuest, TEXT("Category"), TEXT("User"));
				MetaData->SetValue(NewProp_IsGuest, TEXT("ModuleRelativePath"), TEXT("Public/MyAdvancedFriendsGameInstance.h"));
				MetaData->SetValue(NewProp_IsGuest, TEXT("ToolTip"), TEXT("User registration succes"));
				MetaData->SetValue(NewProp_userIsRegistered, TEXT("Category"), TEXT("User"));
				MetaData->SetValue(NewProp_userIsRegistered, TEXT("ModuleRelativePath"), TEXT("Public/MyAdvancedFriendsGameInstance.h"));
				MetaData->SetValue(NewProp_userIsRegistered, TEXT("ToolTip"), TEXT("User registration succes"));
				MetaData->SetValue(NewProp_userIsLogged, TEXT("Category"), TEXT("User"));
				MetaData->SetValue(NewProp_userIsLogged, TEXT("ModuleRelativePath"), TEXT("Public/MyAdvancedFriendsGameInstance.h"));
				MetaData->SetValue(NewProp_userIsLogged, TEXT("ToolTip"), TEXT("User is Logged"));
				MetaData->SetValue(NewProp_userToken, TEXT("Category"), TEXT("User"));
				MetaData->SetValue(NewProp_userToken, TEXT("ModuleRelativePath"), TEXT("Public/MyAdvancedFriendsGameInstance.h"));
				MetaData->SetValue(NewProp_userToken, TEXT("ToolTip"), TEXT("User token"));
				MetaData->SetValue(NewProp_userName, TEXT("Category"), TEXT("User"));
				MetaData->SetValue(NewProp_userName, TEXT("ModuleRelativePath"), TEXT("Public/MyAdvancedFriendsGameInstance.h"));
				MetaData->SetValue(NewProp_userName, TEXT("ToolTip"), TEXT("User name"));
				MetaData->SetValue(NewProp_userId, TEXT("Category"), TEXT("User"));
				MetaData->SetValue(NewProp_userId, TEXT("ModuleRelativePath"), TEXT("Public/MyAdvancedFriendsGameInstance.h"));
				MetaData->SetValue(NewProp_userId, TEXT("ToolTip"), TEXT("User id"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMyAdvancedFriendsGameInstance(Z_Construct_UClass_UMyAdvancedFriendsGameInstance, &UMyAdvancedFriendsGameInstance::StaticClass, TEXT("UMyAdvancedFriendsGameInstance"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMyAdvancedFriendsGameInstance);
	UClass* Z_Construct_UClass_UMyBlueprintFunctionLibrary_NoRegister()
	{
		return UMyBlueprintFunctionLibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_UMyBlueprintFunctionLibrary()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = UMyBlueprintFunctionLibrary::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MusicSkillLevel = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MusicSkillLevel"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MusicSkillLevel, UMyBlueprintFunctionLibrary), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyBlueprintFunctionLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MyBlueprintFunctionLibrary.h"));
				MetaData->SetValue(NewProp_MusicSkillLevel, TEXT("Category"), TEXT("PlayerMusicSkill"));
				MetaData->SetValue(NewProp_MusicSkillLevel, TEXT("ModuleRelativePath"), TEXT("Public/MyBlueprintFunctionLibrary.h"));
				MetaData->SetValue(NewProp_MusicSkillLevel, TEXT("ToolTip"), TEXT("What is the Player's current musical skill level?"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMyBlueprintFunctionLibrary(Z_Construct_UClass_UMyBlueprintFunctionLibrary, &UMyBlueprintFunctionLibrary::StaticClass, TEXT("UMyBlueprintFunctionLibrary"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMyBlueprintFunctionLibrary);
	UClass* Z_Construct_UClass_AMyCharacter_NoRegister()
	{
		return AMyCharacter::StaticClass();
	}
	UClass* Z_Construct_UClass_AMyCharacter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACharacter();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = AMyCharacter::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyCharacter.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MyCharacter.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMyCharacter(Z_Construct_UClass_AMyCharacter, &AMyCharacter::StaticClass, TEXT("AMyCharacter"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AMyCharacter);
	UFunction* Z_Construct_UFunction_AMyDefaultPawn_OnRep_CurrentFloatingName()
	{
		UObject* Outer=Z_Construct_UClass_AMyDefaultPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnRep_CurrentFloatingName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MyDefaultPawn.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AMyDefaultPawn_OnRep_PosChange()
	{
		UObject* Outer=Z_Construct_UClass_AMyDefaultPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnRep_PosChange"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MyDefaultPawn.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AMyDefaultPawn_OnRep_RotChange()
	{
		UObject* Outer=Z_Construct_UClass_AMyDefaultPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnRep_RotChange"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MyDefaultPawn.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AMyDefaultPawn_ServerMoveForward()
	{
		UObject* Outer=Z_Construct_UClass_AMyDefaultPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ServerMoveForward"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80A20CC0, 65535, sizeof(MyDefaultPawn_eventServerMoveForward_Parms));
			UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Rotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Rotation, MyDefaultPawn_eventServerMoveForward_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, MyDefaultPawn_eventServerMoveForward_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MyDefaultPawn.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AMyDefaultPawn_ServerMoveRight()
	{
		UObject* Outer=Z_Construct_UClass_AMyDefaultPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ServerMoveRight"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80A20CC0, 65535, sizeof(MyDefaultPawn_eventServerMoveRight_Parms));
			UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Rotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Rotation, MyDefaultPawn_eventServerMoveRight_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, MyDefaultPawn_eventServerMoveRight_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MyDefaultPawn.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AMyDefaultPawn_ServerMoveTop()
	{
		UObject* Outer=Z_Construct_UClass_AMyDefaultPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ServerMoveTop"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80A20CC0, 65535, sizeof(MyDefaultPawn_eventServerMoveTop_Parms));
			UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Rotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Rotation, MyDefaultPawn_eventServerMoveTop_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, MyDefaultPawn_eventServerMoveTop_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MyDefaultPawn.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AMyDefaultPawn_SetCurrentFloatingName()
	{
		UObject* Outer=Z_Construct_UClass_AMyDefaultPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetCurrentFloatingName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80220CC0, 65535, sizeof(MyDefaultPawn_eventSetCurrentFloatingName_Parms));
			UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Name, MyDefaultPawn_eventSetCurrentFloatingName_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MyDefaultPawn.h"));
			MetaData->SetValue(NewProp_Name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AMyDefaultPawn_NoRegister()
	{
		return AMyDefaultPawn::StaticClass();
	}
	UClass* Z_Construct_UClass_AMyDefaultPawn()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ADefaultPawn();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = AMyDefaultPawn::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AMyDefaultPawn_OnRep_CurrentFloatingName());
				OuterClass->LinkChild(Z_Construct_UFunction_AMyDefaultPawn_OnRep_PosChange());
				OuterClass->LinkChild(Z_Construct_UFunction_AMyDefaultPawn_OnRep_RotChange());
				OuterClass->LinkChild(Z_Construct_UFunction_AMyDefaultPawn_ServerMoveForward());
				OuterClass->LinkChild(Z_Construct_UFunction_AMyDefaultPawn_ServerMoveRight());
				OuterClass->LinkChild(Z_Construct_UFunction_AMyDefaultPawn_ServerMoveTop());
				OuterClass->LinkChild(Z_Construct_UFunction_AMyDefaultPawn_SetCurrentFloatingName());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_CurrentFloatingName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentFloatingName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(CurrentFloatingName, AMyDefaultPawn), 0x0010000100022025);
				NewProp_CurrentFloatingName->RepNotifyFunc = FName(TEXT("OnRep_CurrentFloatingName"));
				UProperty* NewProp_CurrentRotation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentRotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(CurrentRotation, AMyDefaultPawn), 0x0010000100002020, Z_Construct_UScriptStruct_FRotator());
				NewProp_CurrentRotation->RepNotifyFunc = FName(TEXT("OnRep_RotChange"));
				UProperty* NewProp_CurrentPosition = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(CurrentPosition, AMyDefaultPawn), 0x0010000100002020, Z_Construct_UScriptStruct_FVector());
				NewProp_CurrentPosition->RepNotifyFunc = FName(TEXT("OnRep_PosChange"));
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMyDefaultPawn_OnRep_CurrentFloatingName(), "OnRep_CurrentFloatingName"); // 2513368041
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMyDefaultPawn_OnRep_PosChange(), "OnRep_PosChange"); // 1294188582
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMyDefaultPawn_OnRep_RotChange(), "OnRep_RotChange"); // 1823425020
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMyDefaultPawn_ServerMoveForward(), "ServerMoveForward"); // 2897333250
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMyDefaultPawn_ServerMoveRight(), "ServerMoveRight"); // 97202587
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMyDefaultPawn_ServerMoveTop(), "ServerMoveTop"); // 3826109953
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMyDefaultPawn_SetCurrentFloatingName(), "SetCurrentFloatingName"); // 776362408
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyDefaultPawn.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MyDefaultPawn.h"));
				MetaData->SetValue(NewProp_CurrentFloatingName, TEXT("Category"), TEXT("MyDefaultPawn"));
				MetaData->SetValue(NewProp_CurrentFloatingName, TEXT("ModuleRelativePath"), TEXT("Public/MyDefaultPawn.h"));
				MetaData->SetValue(NewProp_CurrentRotation, TEXT("ModuleRelativePath"), TEXT("Public/MyDefaultPawn.h"));
				MetaData->SetValue(NewProp_CurrentPosition, TEXT("ModuleRelativePath"), TEXT("Public/MyDefaultPawn.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMyDefaultPawn(Z_Construct_UClass_AMyDefaultPawn, &AMyDefaultPawn::StaticClass, TEXT("AMyDefaultPawn"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AMyDefaultPawn);
	UScriptStruct* Z_Construct_UScriptStruct_FBoton()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MultiUserTool();
		extern uint32 Get_Z_Construct_UScriptStruct_FBoton_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("Boton"), sizeof(FBoton), Get_Z_Construct_UScriptStruct_FBoton_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Boton"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FBoton>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("MyHUD.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FBoton_CRC() { return 2189366409U; }
	UClass* Z_Construct_UClass_AMyHUD_NoRegister()
	{
		return AMyHUD::StaticClass();
	}
	UClass* Z_Construct_UClass_AMyHUD()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AHUD();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = AMyHUD::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2090028C;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(DontDrawHUD, AMyHUD, bool);
				UProperty* NewProp_DontDrawHUD = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DontDrawHUD"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DontDrawHUD, AMyHUD), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(DontDrawHUD, AMyHUD), sizeof(bool), true);
				UProperty* NewProp_MaterialBackground = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaterialBackground"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MaterialBackground, AMyHUD), 0x0010000000000005, Z_Construct_UClass_UMaterialInterface_NoRegister());
				UProperty* NewProp_ButtonBackground = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ButtonBackground"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ButtonBackground, AMyHUD), 0x0010000000000005, Z_Construct_UClass_UTexture2D_NoRegister());
				UProperty* NewProp_CursorHoveringButton = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CursorHoveringButton"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CursorHoveringButton, AMyHUD), 0x0010000000000005, Z_Construct_UClass_UTexture2D_NoRegister());
				UProperty* NewProp_CursorMain = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CursorMain"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CursorMain, AMyHUD), 0x0010000000000005, Z_Construct_UClass_UTexture2D_NoRegister());
				UProperty* NewProp_HUDFont = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HUDFont"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(HUDFont, AMyHUD), 0x0010000000000000, Z_Construct_UClass_UFont_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Rendering Actor Input Replication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyHUD.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MyHUD.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
				MetaData->SetValue(NewProp_DontDrawHUD, TEXT("Category"), TEXT("Options"));
				MetaData->SetValue(NewProp_DontDrawHUD, TEXT("ModuleRelativePath"), TEXT("MyHUD.h"));
				MetaData->SetValue(NewProp_DontDrawHUD, TEXT("ToolTip"), TEXT("Draw Hud?"));
				MetaData->SetValue(NewProp_MaterialBackground, TEXT("Category"), TEXT("Materials"));
				MetaData->SetValue(NewProp_MaterialBackground, TEXT("ModuleRelativePath"), TEXT("MyHUD.h"));
				MetaData->SetValue(NewProp_MaterialBackground, TEXT("ToolTip"), TEXT("Events"));
				MetaData->SetValue(NewProp_ButtonBackground, TEXT("Category"), TEXT("T2D"));
				MetaData->SetValue(NewProp_ButtonBackground, TEXT("ModuleRelativePath"), TEXT("MyHUD.h"));
				MetaData->SetValue(NewProp_ButtonBackground, TEXT("ToolTip"), TEXT("Button"));
				MetaData->SetValue(NewProp_CursorHoveringButton, TEXT("Category"), TEXT("T2D"));
				MetaData->SetValue(NewProp_CursorHoveringButton, TEXT("ModuleRelativePath"), TEXT("MyHUD.h"));
				MetaData->SetValue(NewProp_CursorHoveringButton, TEXT("ToolTip"), TEXT("Hovering"));
				MetaData->SetValue(NewProp_CursorMain, TEXT("Category"), TEXT("T2D"));
				MetaData->SetValue(NewProp_CursorMain, TEXT("ModuleRelativePath"), TEXT("MyHUD.h"));
				MetaData->SetValue(NewProp_CursorMain, TEXT("ToolTip"), TEXT("Cursor"));
				MetaData->SetValue(NewProp_HUDFont, TEXT("ModuleRelativePath"), TEXT("MyHUD.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMyHUD(Z_Construct_UClass_AMyHUD, &AMyHUD::StaticClass, TEXT("AMyHUD"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AMyHUD);
	UClass* Z_Construct_UClass_AMyPaperSpriteActor_NoRegister()
	{
		return AMyPaperSpriteActor::StaticClass();
	}
	UClass* Z_Construct_UClass_AMyPaperSpriteActor()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APaperSpriteActor();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = AMyPaperSpriteActor::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_spriteMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("spriteMesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(spriteMesh, AMyPaperSpriteActor), 0x00100000000b0009, Z_Construct_UClass_UPaperSpriteComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyPaperSpriteActor.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MyPaperSpriteActor.h"));
				MetaData->SetValue(NewProp_spriteMesh, TEXT("Category"), TEXT("Mesh"));
				MetaData->SetValue(NewProp_spriteMesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_spriteMesh, TEXT("ModuleRelativePath"), TEXT("MyPaperSpriteActor.h"));
				MetaData->SetValue(NewProp_spriteMesh, TEXT("ToolTip"), TEXT("Para el material"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMyPaperSpriteActor(Z_Construct_UClass_AMyPaperSpriteActor, &AMyPaperSpriteActor::StaticClass, TEXT("AMyPaperSpriteActor"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AMyPaperSpriteActor);
	UFunction* Z_Construct_UFunction_AMyPawn_OnKBD()
	{
		UObject* Outer=Z_Construct_UClass_AMyPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnKBD"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("MyPawn.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AMyPawn_OnKBU()
	{
		UObject* Outer=Z_Construct_UClass_AMyPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnKBU"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("MyPawn.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AMyPawn_OnLBD()
	{
		UObject* Outer=Z_Construct_UClass_AMyPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnLBD"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("MyPawn.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AMyPawn_OnLBU()
	{
		UObject* Outer=Z_Construct_UClass_AMyPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnLBU"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("MyPawn.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AMyPawn_NoRegister()
	{
		return AMyPawn::StaticClass();
	}
	UClass* Z_Construct_UClass_AMyPawn()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APawn();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = AMyPawn::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AMyPawn_OnKBD());
				OuterClass->LinkChild(Z_Construct_UFunction_AMyPawn_OnKBU());
				OuterClass->LinkChild(Z_Construct_UFunction_AMyPawn_OnLBD());
				OuterClass->LinkChild(Z_Construct_UFunction_AMyPawn_OnLBU());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OurLight2 = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OurLight2"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OurLight2, AMyPawn), 0x0010000000080009, Z_Construct_UClass_USpotLightComponent_NoRegister());
				UProperty* NewProp_OurCamera = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OurCamera"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OurCamera, AMyPawn), 0x00100000000a0009, Z_Construct_UClass_UCameraComponent_NoRegister());
				UProperty* NewProp_OurCameraSpringArm = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OurCameraSpringArm"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OurCameraSpringArm, AMyPawn), 0x00100000000a0009, Z_Construct_UClass_USpringArmComponent_NoRegister());
				UProperty* NewProp_NavigatorMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NavigatorMesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(NavigatorMesh, AMyPawn), 0x00100000000a0009, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMyPawn_OnKBD(), "OnKBD"); // 2687631445
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMyPawn_OnKBU(), "OnKBU"); // 3996741338
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMyPawn_OnLBD(), "OnLBD"); // 1587755868
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMyPawn_OnLBU(), "OnLBU"); // 279467475
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyPawn.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MyPawn.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("class ACodeGeneratedNeuron;"));
				MetaData->SetValue(NewProp_OurLight2, TEXT("Category"), TEXT("MyPawn"));
				MetaData->SetValue(NewProp_OurLight2, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_OurLight2, TEXT("ModuleRelativePath"), TEXT("MyPawn.h"));
				MetaData->SetValue(NewProp_OurLight2, TEXT("ToolTip"), TEXT("UPROPERTY(VisibleAnywhere, Category = \"Camera\")DUDAS"));
				MetaData->SetValue(NewProp_OurCamera, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_OurCamera, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_OurCamera, TEXT("ModuleRelativePath"), TEXT("MyPawn.h"));
				MetaData->SetValue(NewProp_OurCamera, TEXT("ToolTip"), TEXT("Primary camera of the player"));
				MetaData->SetValue(NewProp_OurCameraSpringArm, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_OurCameraSpringArm, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_OurCameraSpringArm, TEXT("ModuleRelativePath"), TEXT("MyPawn.h"));
				MetaData->SetValue(NewProp_NavigatorMesh, TEXT("Category"), TEXT("Mesh"));
				MetaData->SetValue(NewProp_NavigatorMesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_NavigatorMesh, TEXT("ModuleRelativePath"), TEXT("MyPawn.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMyPawn(Z_Construct_UClass_AMyPawn, &AMyPawn::StaticClass, TEXT("AMyPawn"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AMyPawn);
	UClass* Z_Construct_UClass_UMyRendererSettings_NoRegister()
	{
		return UMyRendererSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_UMyRendererSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_URendererSettings();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = UMyRendererSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100086;


				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyRendererSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MyRendererSettings.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMyRendererSettings(Z_Construct_UClass_UMyRendererSettings, &UMyRendererSettings::StaticClass, TEXT("UMyRendererSettings"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMyRendererSettings);
	UFunction* Z_Construct_UFunction_UMyUserWidgetNeuron_HideEnhacedNeurons()
	{
		UObject* Outer=Z_Construct_UClass_UMyUserWidgetNeuron();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HideEnhacedNeurons"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("NeuronUI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MyUserWidgetNeuron.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("HideEnhacedNeurons funcion rpc to do in server"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMyUserWidgetNeuron_HideNotEnhacedNeurons()
	{
		UObject* Outer=Z_Construct_UClass_UMyUserWidgetNeuron();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HideNotEnhacedNeurons"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("NeuronUI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MyUserWidgetNeuron.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("HideNotEnhacedNeurons funcion rpc to do in server"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMyUserWidgetNeuron_UnHideEnhacedNeurons()
	{
		UObject* Outer=Z_Construct_UClass_UMyUserWidgetNeuron();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UnHideEnhacedNeurons"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("NeuronUI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MyUserWidgetNeuron.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("UnHideEnhacedNeurons funcion rpc to do in server"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMyUserWidgetNeuron_UnHideNotEnhacedNeurons()
	{
		UObject* Outer=Z_Construct_UClass_UMyUserWidgetNeuron();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UnHideNotEnhacedNeurons"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("NeuronUI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MyUserWidgetNeuron.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("UnHideNotEnhacedNeurons funcion rpc to do in server"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UMyUserWidgetNeuron_NoRegister()
	{
		return UMyUserWidgetNeuron::StaticClass();
	}
	UClass* Z_Construct_UClass_UMyUserWidgetNeuron()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UUserWidget();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = UMyUserWidgetNeuron::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20901080;

				OuterClass->LinkChild(Z_Construct_UFunction_UMyUserWidgetNeuron_HideEnhacedNeurons());
				OuterClass->LinkChild(Z_Construct_UFunction_UMyUserWidgetNeuron_HideNotEnhacedNeurons());
				OuterClass->LinkChild(Z_Construct_UFunction_UMyUserWidgetNeuron_UnHideEnhacedNeurons());
				OuterClass->LinkChild(Z_Construct_UFunction_UMyUserWidgetNeuron_UnHideNotEnhacedNeurons());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMyUserWidgetNeuron_HideEnhacedNeurons(), "HideEnhacedNeurons"); // 2200304907
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMyUserWidgetNeuron_HideNotEnhacedNeurons(), "HideNotEnhacedNeurons"); // 1771970803
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMyUserWidgetNeuron_UnHideEnhacedNeurons(), "UnHideEnhacedNeurons"); // 873375395
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMyUserWidgetNeuron_UnHideNotEnhacedNeurons(), "UnHideNotEnhacedNeurons"); // 3279392104
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyUserWidgetNeuron.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MyUserWidgetNeuron.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMyUserWidgetNeuron(Z_Construct_UClass_UMyUserWidgetNeuron, &UMyUserWidgetNeuron::StaticClass, TEXT("UMyUserWidgetNeuron"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMyUserWidgetNeuron);
	UFunction* Z_Construct_UFunction_UMyUserWidgetNeuronInfo_SetInfo()
	{
		struct MyUserWidgetNeuronInfo_eventSetInfo_Parms
		{
			int32 idneuron;
			int32 idInfo;
			FString NeuronInfo;
		};
		UObject* Outer=Z_Construct_UClass_UMyUserWidgetNeuronInfo();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(MyUserWidgetNeuronInfo_eventSetInfo_Parms));
			UProperty* NewProp_NeuronInfo = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NeuronInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(NeuronInfo, MyUserWidgetNeuronInfo_eventSetInfo_Parms), 0x0010000000000080);
			UProperty* NewProp_idInfo = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("idInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(idInfo, MyUserWidgetNeuronInfo_eventSetInfo_Parms), 0x0010000000000080);
			UProperty* NewProp_idneuron = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("idneuron"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(idneuron, MyUserWidgetNeuronInfo_eventSetInfo_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("NeuronUI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MyUserWidgetNeuronInfo.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("SetInfo funcion rpc to do in server"));
			MetaData->SetValue(NewProp_NeuronInfo, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UMyUserWidgetNeuronInfo_NoRegister()
	{
		return UMyUserWidgetNeuronInfo::StaticClass();
	}
	UClass* Z_Construct_UClass_UMyUserWidgetNeuronInfo()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UUserWidget();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = UMyUserWidgetNeuronInfo::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20901080;

				OuterClass->LinkChild(Z_Construct_UFunction_UMyUserWidgetNeuronInfo_SetInfo());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_CurrentNeuronInfo = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentNeuronInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(CurrentNeuronInfo, UMyUserWidgetNeuronInfo), 0x0010000000000005);
				UProperty* NewProp_currentIdActorNotification = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("currentIdActorNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(currentIdActorNotification, UMyUserWidgetNeuronInfo), 0x0010000000000005);
				UProperty* NewProp_currentidneuron = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("currentidneuron"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(currentidneuron, UMyUserWidgetNeuronInfo), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMyUserWidgetNeuronInfo_SetInfo(), "SetInfo"); // 2640915295
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyUserWidgetNeuronInfo.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MyUserWidgetNeuronInfo.h"));
				MetaData->SetValue(NewProp_CurrentNeuronInfo, TEXT("Category"), TEXT("NeuronUi"));
				MetaData->SetValue(NewProp_CurrentNeuronInfo, TEXT("ModuleRelativePath"), TEXT("Public/MyUserWidgetNeuronInfo.h"));
				MetaData->SetValue(NewProp_currentIdActorNotification, TEXT("Category"), TEXT("NeuronUi"));
				MetaData->SetValue(NewProp_currentIdActorNotification, TEXT("ModuleRelativePath"), TEXT("Public/MyUserWidgetNeuronInfo.h"));
				MetaData->SetValue(NewProp_currentidneuron, TEXT("Category"), TEXT("NeuronUi"));
				MetaData->SetValue(NewProp_currentidneuron, TEXT("ModuleRelativePath"), TEXT("Public/MyUserWidgetNeuronInfo.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMyUserWidgetNeuronInfo(Z_Construct_UClass_UMyUserWidgetNeuronInfo, &UMyUserWidgetNeuronInfo::StaticClass, TEXT("UMyUserWidgetNeuronInfo"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMyUserWidgetNeuronInfo);
	UFunction* Z_Construct_UFunction_UMyWidget_AddItemToUI()
	{
		struct MyWidget_eventAddItemToUI_Parms
		{
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UMyWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AddItemToUI"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(MyWidget_eventAddItemToUI_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, MyWidget_eventAddItemToUI_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Events"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("MyWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Responsible for adding the ItemToAdd to our UI"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UMyWidget_NoRegister()
	{
		return UMyWidget::StaticClass();
	}
	UClass* Z_Construct_UClass_UMyWidget()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UUserWidget();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = UMyWidget::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20901080;

				OuterClass->LinkChild(Z_Construct_UFunction_UMyWidget_AddItemToUI());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MyNewWidgetName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MyNewWidgetName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MyNewWidgetName, UMyWidget), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMyWidget_AddItemToUI(), "AddItemToUI"); // 2302108314
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyWidget.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MyWidget.h"));
				MetaData->SetValue(NewProp_MyNewWidgetName, TEXT("Category"), TEXT("My New User Widget"));
				MetaData->SetValue(NewProp_MyNewWidgetName, TEXT("ModuleRelativePath"), TEXT("MyWidget.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMyWidget(Z_Construct_UClass_UMyWidget, &UMyWidget::StaticClass, TEXT("UMyWidget"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMyWidget);
	UFunction* Z_Construct_UFunction_ANavigatorHUD_AddMessageBP()
	{
		struct NavigatorHUD_eventAddMessageBP_Parms
		{
			int32 Type;
			FString Username;
			FString Text;
			bool Replicate;
		};
		UObject* Outer=Z_Construct_UClass_ANavigatorHUD();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AddMessageBP"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(NavigatorHUD_eventAddMessageBP_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Replicate, NavigatorHUD_eventAddMessageBP_Parms, bool);
			UProperty* NewProp_Replicate = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Replicate"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Replicate, NavigatorHUD_eventAddMessageBP_Parms), 0x0010000000000082, CPP_BOOL_PROPERTY_BITMASK(Replicate, NavigatorHUD_eventAddMessageBP_Parms), sizeof(bool), true);
			UProperty* NewProp_Text = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Text"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Text, NavigatorHUD_eventAddMessageBP_Parms), 0x0010000000000080);
			UProperty* NewProp_Username = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Username"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Username, NavigatorHUD_eventAddMessageBP_Parms), 0x0010000000000080);
			UProperty* NewProp_Type = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Type"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Type, NavigatorHUD_eventAddMessageBP_Parms), 0x0010000000000082);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Chat"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("NavigatorHUD.h"));
			MetaData->SetValue(NewProp_Replicate, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_Text, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_Username, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_Type, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ANavigatorHUD_NoRegister()
	{
		return ANavigatorHUD::StaticClass();
	}
	UClass* Z_Construct_UClass_ANavigatorHUD()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AHUD();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = ANavigatorHUD::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2090028C;

				OuterClass->LinkChild(Z_Construct_UFunction_ANavigatorHUD_AddMessageBP());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ANavigatorHUD_AddMessageBP(), "AddMessageBP"); // 612661458
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Rendering Actor Input Replication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("NavigatorHUD.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("NavigatorHUD.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ANavigatorHUD(Z_Construct_UClass_ANavigatorHUD, &ANavigatorHUD::StaticClass, TEXT("ANavigatorHUD"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ANavigatorHUD);
	UFunction* Z_Construct_UFunction_ANetPawn_MoveForward()
	{
		struct NetPawn_eventMoveForward_Parms
		{
			float Value;
		};
		UObject* Outer=Z_Construct_UClass_ANetPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MoveForward"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535, sizeof(NetPawn_eventMoveForward_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, NetPawn_eventMoveForward_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/NetPawn.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ANetPawn_MoveRight()
	{
		struct NetPawn_eventMoveRight_Parms
		{
			float Value;
		};
		UObject* Outer=Z_Construct_UClass_ANetPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MoveRight"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535, sizeof(NetPawn_eventMoveRight_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, NetPawn_eventMoveRight_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/NetPawn.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ANetPawn_MoveTop()
	{
		struct NetPawn_eventMoveTop_Parms
		{
			float Value;
		};
		UObject* Outer=Z_Construct_UClass_ANetPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MoveTop"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535, sizeof(NetPawn_eventMoveTop_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, NetPawn_eventMoveTop_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/NetPawn.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ANetPawn_OnRep_PosChange()
	{
		UObject* Outer=Z_Construct_UClass_ANetPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnRep_PosChange"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/NetPawn.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ANetPawn_OnRep_RotChange()
	{
		UObject* Outer=Z_Construct_UClass_ANetPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnRep_RotChange"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/NetPawn.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ANetPawn_ServerMoveForward()
	{
		UObject* Outer=Z_Construct_UClass_ANetPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ServerMoveForward"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80A20CC0, 65535, sizeof(NetPawn_eventServerMoveForward_Parms));
			UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Rotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Rotation, NetPawn_eventServerMoveForward_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, NetPawn_eventServerMoveForward_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/NetPawn.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ANetPawn_ServerMoveRight()
	{
		UObject* Outer=Z_Construct_UClass_ANetPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ServerMoveRight"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80A20CC0, 65535, sizeof(NetPawn_eventServerMoveRight_Parms));
			UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Rotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Rotation, NetPawn_eventServerMoveRight_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, NetPawn_eventServerMoveRight_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/NetPawn.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ANetPawn_ServerMoveTop()
	{
		UObject* Outer=Z_Construct_UClass_ANetPawn();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ServerMoveTop"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80A20CC0, 65535, sizeof(NetPawn_eventServerMoveTop_Parms));
			UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Rotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Rotation, NetPawn_eventServerMoveTop_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, NetPawn_eventServerMoveTop_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/NetPawn.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ANetPawn_NoRegister()
	{
		return ANetPawn::StaticClass();
	}
	UClass* Z_Construct_UClass_ANetPawn()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APawn();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = ANetPawn::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_ANetPawn_MoveForward());
				OuterClass->LinkChild(Z_Construct_UFunction_ANetPawn_MoveRight());
				OuterClass->LinkChild(Z_Construct_UFunction_ANetPawn_MoveTop());
				OuterClass->LinkChild(Z_Construct_UFunction_ANetPawn_OnRep_PosChange());
				OuterClass->LinkChild(Z_Construct_UFunction_ANetPawn_OnRep_RotChange());
				OuterClass->LinkChild(Z_Construct_UFunction_ANetPawn_ServerMoveForward());
				OuterClass->LinkChild(Z_Construct_UFunction_ANetPawn_ServerMoveRight());
				OuterClass->LinkChild(Z_Construct_UFunction_ANetPawn_ServerMoveTop());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OurVisibleComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OurVisibleComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OurVisibleComponent, ANetPawn), 0x0010000000080009, Z_Construct_UClass_USceneComponent_NoRegister());
				UProperty* NewProp_CurrentRotation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentRotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(CurrentRotation, ANetPawn), 0x0010000100002020, Z_Construct_UScriptStruct_FRotator());
				NewProp_CurrentRotation->RepNotifyFunc = FName(TEXT("OnRep_RotChange"));
				UProperty* NewProp_CurrentPosition = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(CurrentPosition, ANetPawn), 0x0010000100002020, Z_Construct_UScriptStruct_FVector());
				NewProp_CurrentPosition->RepNotifyFunc = FName(TEXT("OnRep_PosChange"));
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ANetPawn_MoveForward(), "MoveForward"); // 1000315115
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ANetPawn_MoveRight(), "MoveRight"); // 3090113966
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ANetPawn_MoveTop(), "MoveTop"); // 193510711
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ANetPawn_OnRep_PosChange(), "OnRep_PosChange"); // 1642247317
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ANetPawn_OnRep_RotChange(), "OnRep_RotChange"); // 163605594
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ANetPawn_ServerMoveForward(), "ServerMoveForward"); // 3850078176
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ANetPawn_ServerMoveRight(), "ServerMoveRight"); // 222246960
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ANetPawn_ServerMoveTop(), "ServerMoveTop"); // 1059458710
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("NetPawn.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/NetPawn.h"));
				MetaData->SetValue(NewProp_OurVisibleComponent, TEXT("Category"), TEXT("NetPawn"));
				MetaData->SetValue(NewProp_OurVisibleComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_OurVisibleComponent, TEXT("ModuleRelativePath"), TEXT("Public/NetPawn.h"));
				MetaData->SetValue(NewProp_CurrentRotation, TEXT("ModuleRelativePath"), TEXT("Public/NetPawn.h"));
				MetaData->SetValue(NewProp_CurrentPosition, TEXT("ModuleRelativePath"), TEXT("Public/NetPawn.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ANetPawn(Z_Construct_UClass_ANetPawn, &ANetPawn::StaticClass, TEXT("ANetPawn"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ANetPawn);
	UClass* Z_Construct_UClass_ANeuronForest_NoRegister()
	{
		return ANeuronForest::StaticClass();
	}
	UClass* Z_Construct_UClass_ANeuronForest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = ANeuronForest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("NeuronForest.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("NeuronForest.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ANeuronForest(Z_Construct_UClass_ANeuronForest, &ANeuronForest::StaticClass, TEXT("ANeuronForest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ANeuronForest);
	UScriptStruct* Z_Construct_UScriptStruct_FSlateNeuronMenuStyle()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MultiUserTool();
		extern uint32 Get_Z_Construct_UScriptStruct_FSlateNeuronMenuStyle_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("SlateNeuronMenuStyle"), sizeof(FSlateNeuronMenuStyle), Get_Z_Construct_UScriptStruct_FSlateNeuronMenuStyle_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SlateNeuronMenuStyle"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FSlateWidgetStyle(), new UScriptStruct::TCppStructOps<FSlateNeuronMenuStyle>, EStructFlags(0x00000201));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/SlateNeuronMenuWidgetStyle.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSlateNeuronMenuStyle_CRC() { return 1620527867U; }
	UClass* Z_Construct_UClass_USlateNeuronMenuWidgetStyle_NoRegister()
	{
		return USlateNeuronMenuWidgetStyle::StaticClass();
	}
	UClass* Z_Construct_UClass_USlateNeuronMenuWidgetStyle()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_USlateWidgetStyleContainerBase();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = USlateNeuronMenuWidgetStyle::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_WidgetStyle = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WidgetStyle"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(WidgetStyle, USlateNeuronMenuWidgetStyle), 0x0010000000000001, Z_Construct_UScriptStruct_FSlateNeuronMenuStyle());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object Object"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("SlateNeuronMenuWidgetStyle.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/SlateNeuronMenuWidgetStyle.h"));
				MetaData->SetValue(NewProp_WidgetStyle, TEXT("Category"), TEXT("Appearance"));
				MetaData->SetValue(NewProp_WidgetStyle, TEXT("ModuleRelativePath"), TEXT("Public/SlateNeuronMenuWidgetStyle.h"));
				MetaData->SetValue(NewProp_WidgetStyle, TEXT("ShowOnlyInnerProperties"), TEXT(""));
				MetaData->SetValue(NewProp_WidgetStyle, TEXT("ToolTip"), TEXT("The actual data describing the widget appearance."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USlateNeuronMenuWidgetStyle(Z_Construct_UClass_USlateNeuronMenuWidgetStyle, &USlateNeuronMenuWidgetStyle::StaticClass, TEXT("USlateNeuronMenuWidgetStyle"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(USlateNeuronMenuWidgetStyle);
	UClass* Z_Construct_UClass_AXGameState_NoRegister()
	{
		return AXGameState::StaticClass();
	}
	UClass* Z_Construct_UClass_AXGameState()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameState();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = AXGameState::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900280;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Input Movement Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("XGameState.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("XGameState.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXGameState(Z_Construct_UClass_AXGameState, &AXGameState::StaticClass, TEXT("AXGameState"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXGameState);
	UFunction* Z_Construct_UFunction_AXPlayerController_EnhanceNeuron()
	{
		UObject* Outer=Z_Construct_UClass_AXPlayerController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EnhanceNeuron"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80220CC0, 65535, sizeof(XPlayerController_eventEnhanceNeuron_Parms));
			UProperty* NewProp_idneuron = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("idneuron"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(idneuron, XPlayerController_eventEnhanceNeuron_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("XPlayerController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Enhace funcion rpc to do in server"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXPlayerController_GetAllMessages()
	{
		UObject* Outer=Z_Construct_UClass_AXPlayerController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetAllMessages"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("REST"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("REST get all Messages"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("REST get all Messages"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("XPlayerController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("REST get all Messages for a session"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXPlayerController_HideEnhacedNeurons()
	{
		UObject* Outer=Z_Construct_UClass_AXPlayerController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HideEnhacedNeurons"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80220CC0, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("XPlayerController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("HideEnhacedNeurons funcion rpc to do in server"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXPlayerController_HideNotEnhacedNeurons()
	{
		UObject* Outer=Z_Construct_UClass_AXPlayerController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HideNotEnhacedNeurons"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80220CC0, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("XPlayerController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("HideNotEnhacedNeurons funcion rpc to do in server"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXPlayerController_PlayReplay()
	{
		UObject* Outer=Z_Construct_UClass_AXPlayerController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PlayReplay"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80220CC0, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("XPlayerController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("UnHideNotEnhacedNeurons funcion rpc to do in server"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXPlayerController_SetInfoNeuron()
	{
		UObject* Outer=Z_Construct_UClass_AXPlayerController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetInfoNeuron"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80220CC0, 65535, sizeof(XPlayerController_eventSetInfoNeuron_Parms));
			UProperty* NewProp_NeuronInfo = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NeuronInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(NeuronInfo, XPlayerController_eventSetInfoNeuron_Parms), 0x0010000000000080);
			UProperty* NewProp_idInfo = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("idInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(idInfo, XPlayerController_eventSetInfoNeuron_Parms), 0x0010000000000080);
			UProperty* NewProp_idneuron = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("idneuron"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(idneuron, XPlayerController_eventSetInfoNeuron_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("XPlayerController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("UnHideNotEnhacedNeurons funcion rpc to do in server"));
			MetaData->SetValue(NewProp_NeuronInfo, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXPlayerController_ToggleNeuronInfoWidget()
	{
		struct XPlayerController_eventToggleNeuronInfoWidget_Parms
		{
			int32 idneuron;
			int32 idInfo;
			FString NeuronInfo;
		};
		UObject* Outer=Z_Construct_UClass_AXPlayerController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ToggleNeuronInfoWidget"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(XPlayerController_eventToggleNeuronInfoWidget_Parms));
			UProperty* NewProp_NeuronInfo = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NeuronInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(NeuronInfo, XPlayerController_eventToggleNeuronInfoWidget_Parms), 0x0010000000000080);
			UProperty* NewProp_idInfo = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("idInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(idInfo, XPlayerController_eventToggleNeuronInfoWidget_Parms), 0x0010000000000080);
			UProperty* NewProp_idneuron = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("idneuron"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(idneuron, XPlayerController_eventToggleNeuronInfoWidget_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("NeuronUI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("XPlayerController.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXPlayerController_ToggleNeuronWidget()
	{
		UObject* Outer=Z_Construct_UClass_AXPlayerController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ToggleNeuronWidget"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("NeuronUI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("XPlayerController.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXPlayerController_UnHideEnhacedNeurons()
	{
		UObject* Outer=Z_Construct_UClass_AXPlayerController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UnHideEnhacedNeurons"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80220CC0, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("XPlayerController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("UnHideEnhacedNeurons funcion rpc to do in server"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXPlayerController_UnHideNotEnhacedNeurons()
	{
		UObject* Outer=Z_Construct_UClass_AXPlayerController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UnHideNotEnhacedNeurons"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80220CC0, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("XPlayerController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("UnHideNotEnhacedNeurons funcion rpc to do in server"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AXPlayerController_NoRegister()
	{
		return AXPlayerController::StaticClass();
	}
	UClass* Z_Construct_UClass_AXPlayerController()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APlayerController();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = AXPlayerController::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900284;

				OuterClass->LinkChild(Z_Construct_UFunction_AXPlayerController_EnhanceNeuron());
				OuterClass->LinkChild(Z_Construct_UFunction_AXPlayerController_GetAllMessages());
				OuterClass->LinkChild(Z_Construct_UFunction_AXPlayerController_HideEnhacedNeurons());
				OuterClass->LinkChild(Z_Construct_UFunction_AXPlayerController_HideNotEnhacedNeurons());
				OuterClass->LinkChild(Z_Construct_UFunction_AXPlayerController_PlayReplay());
				OuterClass->LinkChild(Z_Construct_UFunction_AXPlayerController_SetInfoNeuron());
				OuterClass->LinkChild(Z_Construct_UFunction_AXPlayerController_ToggleNeuronInfoWidget());
				OuterClass->LinkChild(Z_Construct_UFunction_AXPlayerController_ToggleNeuronWidget());
				OuterClass->LinkChild(Z_Construct_UFunction_AXPlayerController_UnHideEnhacedNeurons());
				OuterClass->LinkChild(Z_Construct_UFunction_AXPlayerController_UnHideNotEnhacedNeurons());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_NeuronWidgetInfoBP = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NeuronWidgetInfoBP"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(NeuronWidgetInfoBP, AXPlayerController), 0x0024080000000005, Z_Construct_UClass_UMyUserWidgetNeuronInfo_NoRegister(), UClass::StaticClass());
				UProperty* NewProp_NeuronWidgetBP = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NeuronWidgetBP"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(NeuronWidgetBP, AXPlayerController), 0x0024080000000005, Z_Construct_UClass_UMyUserWidgetNeuron_NoRegister(), UClass::StaticClass());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXPlayerController_EnhanceNeuron(), "EnhanceNeuron"); // 3622020819
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXPlayerController_GetAllMessages(), "GetAllMessages"); // 2536518505
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXPlayerController_HideEnhacedNeurons(), "HideEnhacedNeurons"); // 81895387
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXPlayerController_HideNotEnhacedNeurons(), "HideNotEnhacedNeurons"); // 3858630302
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXPlayerController_PlayReplay(), "PlayReplay"); // 390764615
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXPlayerController_SetInfoNeuron(), "SetInfoNeuron"); // 1200262181
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXPlayerController_ToggleNeuronInfoWidget(), "ToggleNeuronInfoWidget"); // 495594123
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXPlayerController_ToggleNeuronWidget(), "ToggleNeuronWidget"); // 429764515
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXPlayerController_UnHideEnhacedNeurons(), "UnHideEnhacedNeurons"); // 2457655947
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXPlayerController_UnHideNotEnhacedNeurons(), "UnHideNotEnhacedNeurons"); // 4159600327
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("XPlayerController.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("XPlayerController.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_NeuronWidgetInfoBP, TEXT("Category"), TEXT("Neuron UI"));
				MetaData->SetValue(NewProp_NeuronWidgetInfoBP, TEXT("ModuleRelativePath"), TEXT("XPlayerController.h"));
				MetaData->SetValue(NewProp_NeuronWidgetBP, TEXT("Category"), TEXT("Neuron UI"));
				MetaData->SetValue(NewProp_NeuronWidgetBP, TEXT("ModuleRelativePath"), TEXT("XPlayerController.h"));
				MetaData->SetValue(NewProp_NeuronWidgetBP, TEXT("ToolTip"), TEXT("Property which is pointing to our Widget Blueprint in order to instantiate it using c++"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXPlayerController(Z_Construct_UClass_AXPlayerController, &AXPlayerController::StaticClass, TEXT("AXPlayerController"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXPlayerController);
	UFunction* Z_Construct_UFunction_AXPlayerState_GetTeamNumber()
	{
		struct XPlayerState_eventGetTeamNumber_Parms
		{
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AXPlayerState();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetTeamNumber"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(XPlayerState_eventGetTeamNumber_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, XPlayerState_eventGetTeamNumber_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Teams"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("XPlayerState.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXPlayerState_UserChat()
	{
		UObject* Outer=Z_Construct_UClass_AXPlayerState();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UserChat"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80024CC0, 65535, sizeof(XPlayerState_eventUserChat_Parms));
			UProperty* NewProp_newmessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newmessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(newmessage, XPlayerState_eventUserChat_Parms), 0x0010000008000082, Z_Construct_UScriptStruct_FSChatMsg());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("XPlayerState.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("second rpc for all the clients\nthen the server calls the function with a multicast that executes on all clients and the server"));
			MetaData->SetValue(NewProp_newmessage, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXPlayerState_UserChatP()
	{
		UObject* Outer=Z_Construct_UClass_AXPlayerState();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UserChatP"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80024CC0, 65535, sizeof(XPlayerState_eventUserChatP_Parms));
			UProperty* NewProp_userDestination = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("userDestination"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(userDestination, XPlayerState_eventUserChatP_Parms), 0x0010000008000082);
			UProperty* NewProp_newmessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newmessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(newmessage, XPlayerState_eventUserChatP_Parms), 0x0010000008000082, Z_Construct_UScriptStruct_FSChatMsg());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("XPlayerState.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("then the server calls the function with a multicast that executes on all clients and the server"));
			MetaData->SetValue(NewProp_userDestination, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_newmessage, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AXPlayerState_UserChatRPC()
	{
		UObject* Outer=Z_Construct_UClass_AXPlayerState();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UserChatRPC"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x80220CC0, 65535, sizeof(XPlayerState_eventUserChatRPC_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(isPrivate, XPlayerState_eventUserChatRPC_Parms, bool);
			UProperty* NewProp_isPrivate = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("isPrivate"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(isPrivate, XPlayerState_eventUserChatRPC_Parms), 0x0010000000000082, CPP_BOOL_PROPERTY_BITMASK(isPrivate, XPlayerState_eventUserChatRPC_Parms), sizeof(bool), true);
			UProperty* NewProp_userDestination = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("userDestination"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(userDestination, XPlayerState_eventUserChatRPC_Parms), 0x0010000008000082);
			UProperty* NewProp_newmessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newmessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(newmessage, XPlayerState_eventUserChatRPC_Parms), 0x0010000008000082, Z_Construct_UScriptStruct_FSChatMsg());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("XPlayerState.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("for player to player rpc you need to first call the message on the server// first rpc for the server"));
			MetaData->SetValue(NewProp_isPrivate, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_userDestination, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_newmessage, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AXPlayerState_NoRegister()
	{
		return AXPlayerState::StaticClass();
	}
	UClass* Z_Construct_UClass_AXPlayerState()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APlayerState();
			Z_Construct_UPackage__Script_MultiUserTool();
			OuterClass = AXPlayerState::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900280;

				OuterClass->LinkChild(Z_Construct_UFunction_AXPlayerState_GetTeamNumber());
				OuterClass->LinkChild(Z_Construct_UFunction_AXPlayerState_UserChat());
				OuterClass->LinkChild(Z_Construct_UFunction_AXPlayerState_UserChatP());
				OuterClass->LinkChild(Z_Construct_UFunction_AXPlayerState_UserChatRPC());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_TeamNumber = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TeamNumber"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(TeamNumber, AXPlayerState), 0x0010000000002020);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXPlayerState_GetTeamNumber(), "GetTeamNumber"); // 2983204895
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXPlayerState_UserChat(), "UserChat"); // 483579498
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXPlayerState_UserChatP(), "UserChatP"); // 407683194
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AXPlayerState_UserChatRPC(), "UserChatRPC"); // 3097924378
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Input Movement Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("XPlayerState.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("XPlayerState.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
				MetaData->SetValue(NewProp_TeamNumber, TEXT("ModuleRelativePath"), TEXT("XPlayerState.h"));
				MetaData->SetValue(NewProp_TeamNumber, TEXT("ToolTip"), TEXT("Team number assigned to player"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AXPlayerState(Z_Construct_UClass_AXPlayerState, &AXPlayerState::StaticClass, TEXT("AXPlayerState"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AXPlayerState);
	UPackage* Z_Construct_UPackage__Script_MultiUserTool()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/MultiUserTool")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x80F1AB06;
			Guid.B = 0xFFE4FF0D;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
